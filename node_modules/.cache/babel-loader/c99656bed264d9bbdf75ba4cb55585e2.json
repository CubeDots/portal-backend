{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/pages/RestPasswordPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate, Navigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RestPasswordPage() {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const navigate = useNavigate();\n  const {\n    token,\n    email\n  } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [formData, setFormData] = React.useState({\n    email: '',\n    password: '',\n    password_confirmation: ''\n  });\n  const [formErrors, setFormErrors] = React.useState('');\n  const [formValidationErrors, setFormValidationErrors] = React.useState({});\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setFormData(prevState => ({ ...prevState,\n      email: email\n    }));\n  }, [email]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    console.log(\"formData \", email, formData);\n    formData['email'] = email;\n    axios.post('http://staging.cuengine.com/api/v7/auth/resetPassword', formData).then(res => {\n      setLoading(false);\n      console.log('resetPassword res', res.status, res.data);\n\n      if (res.status === 200) {\n        setFormErrors(res.data.message);\n        setTimeout(() => {\n          setFormErrors('');\n          navigate(\"/\");\n        }, 5000);\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error.response);\n\n      if (error.response.status === 422) {\n        console.log(\"errors data \", error.response.data.errors); //let errorm = error.response.data.errors[0];\n\n        console.log(\"error \\n\", error.response.data.message);\n        setFormValidationErrors(error.response.data.errors);\n        setFormErrors(error.response.data.message);\n        setTimeout(() => {\n          setFormValidationErrors({});\n          setFormErrors('');\n        }, 5000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-70\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center my-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [formErrors, /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-unstyled\",\n                  children: formValidationErrors && Object.keys(formValidationErrors).map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"text-danger\",\n                    children: formValidationErrors[error][0]\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  value: email,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password\",\n                  placeholder: \"New Password\",\n                  onChange: e => setFormData({ ...formData,\n                    password: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password_confirmation\",\n                  placeholder: \"Confirm Password\",\n                  onChange: e => setFormData({ ...formData,\n                    password_confirmation: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"button\",\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  as: \"span\",\n                  animation: \"border\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), \"  Submitting...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(RestPasswordPage, \"tynyhiHs0rBo1c1l/Lsejb2yUIA=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = RestPasswordPage;\nexport default RestPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestPasswordPage\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/pages/RestPasswordPage.js"],"names":["React","useEffect","useNavigate","Navigate","useParams","axios","Spinner","RestPasswordPage","publicPath","process","env","PUBLIC_URL","navigate","token","email","loading","setLoading","useState","formData","setFormData","password","password_confirmation","formErrors","setFormErrors","formValidationErrors","setFormValidationErrors","window","scrollTo","prevState","onSubmit","e","preventDefault","console","log","post","then","res","status","data","message","setTimeout","catch","error","response","errors","Object","keys","map","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, Navigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction RestPasswordPage() {\n    let publicPath = process.env.PUBLIC_URL;\n\n    const navigate = useNavigate();\n    const { token,email } = useParams();\n\n    const [loading, setLoading] = React.useState(false);\n    const [formData, setFormData] = React.useState({ email: '', password: '', password_confirmation: '' });\n    const [formErrors, setFormErrors] = React.useState('');\n    const [formValidationErrors, setFormValidationErrors] = React.useState({});\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setFormData(prevState => ({\n            ...prevState,\n            email: email\n         }))\n    }, [email]);\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setLoading(true);\n        console.log(\"formData \",email,formData);\n        formData['email'] = email;\n        axios.post('http://staging.cuengine.com/api/v7/auth/resetPassword', formData)\n            .then((res) => {\n                setLoading(false);\n                console.log('resetPassword res', res.status, res.data)\n                if (res.status === 200) {\n                    setFormErrors(res.data.message)\n                    setTimeout(() => {\n                        setFormErrors('');\n                        navigate(\"/\");\n                    }, 5000);\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error.response);\n                if (error.response.status === 422) {\n                    console.log(\"errors data \", error.response.data.errors);\n                    //let errorm = error.response.data.errors[0];\n                    console.log(\"error \\n\", error.response.data.message)\n                    setFormValidationErrors(error.response.data.errors);\n                    setFormErrors(error.response.data.message);\n                    setTimeout(() => {\n                        setFormValidationErrors({});\n                        setFormErrors('');\n                    }, 5000);\n                }\n            })\n    }\n\n\n    return (\n        <>\n            <div className=\"mt-70\">\n                <div className=\"container\">\n\n                    <div className=\"row justify-content-center my-5\">\n\n                        <div className=\"col-md-5\">\n                            <h3>Reset Password</h3>\n                            <p>{token}</p>\n                            <form onSubmit={onSubmit}>\n                                <div className=\"mb-3\">\n                                    {/* {loading ? 'loading...' : ''} */}\n                                    {formErrors}\n                                    <ul className=\"list-unstyled\">\n                                        {formValidationErrors && Object.keys(formValidationErrors).map((error, index) => (\n                                            <li className=\"text-danger\" key={index}>{formValidationErrors[error][0]}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" value={email} readOnly={true} />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" placeholder='New Password' onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"password\" className=\"form-control\" name=\"password_confirmation\" placeholder='Confirm Password' onChange={(e) => setFormData({ ...formData, password_confirmation: e.target.value })} />\n                                </div>\n\n                                {loading ?\n                                    <button className=\"btn btn-primary\" type=\"button\" disabled >\n                                        <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                                    </button>\n                                    :\n                                    <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                                }\n\n\n                                \n                            </form>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default RestPasswordPage;"]},"metadata":{},"sourceType":"module"}