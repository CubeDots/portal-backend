{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal-backend/src/components/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport BecomeOurPartnerModal from \"./home/BecomeOurPartnerModal\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { API_ENDPOINT } from '../common/Constants';\nimport ForgotPasswordModal from './ForgotPasswordModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginModal(props) {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const [isBecomeOurPartnerModalShow, setIsBecomeOurPartnerModalShow] = useState(false);\n  const simpleValidator = useRef(new SimpleReactValidator());\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n\n  const handlePasswordChange = evnt => {\n    setPasswordInput(evnt.target.value);\n  };\n\n  const togglePassword = () => {\n    if (passwordType === \"password\") {\n      setPasswordType(\"text\");\n      return;\n    }\n\n    setPasswordType(\"password\");\n  };\n\n  const isAuthenticated = useIsAuthenticated();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const signIn = useSignIn();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    rememberMe: false\n  });\n  const [formErrors, setFormErrors] = useState('');\n  const [formValidationErrors, setFormValidationErrors] = useState({}); //forgot password\n\n  const [isForgotPasswordModalShow, setisForgotPasswordModalShow] = useState(false);\n\n  const showBecomeOurPartnerModal = () => {\n    console.log(\"showBecomeOurPartnerModal clicked\");\n    handleClose();\n    setTimeout(() => {\n      setIsBecomeOurPartnerModalShow(true);\n    }, 300);\n  };\n\n  const closeBecomeOurPartnerModalModal = () => {\n    console.log(\"closeBecomeOurPartnerModalModal trigger\");\n    setIsBecomeOurPartnerModalShow(false);\n  };\n\n  const openForgotPasswordModal = () => {\n    console.log('openForgotPasswordModal click manually');\n    handleClose();\n    setTimeout(() => {\n      setisForgotPasswordModalShow(true);\n    }, 300);\n  };\n\n  const closeForgotPasswordModal = () => {\n    console.log('closeForgotPasswordModal trigger');\n    setisForgotPasswordModalShow(false); // handleShow();\n\n    setTimeout(() => {\n      handleShow();\n    }, 300);\n  }; // if (isAuthenticated()) {\n  //     // Redirect to dashboard\n  //     console.log(\"valid Redirect to dashboard\");\n  //     return (\n  //         <Navigate to=\"/dash\" replace />\n  //     );\n  // }\n\n\n  const getLoginData = () => {\n    return sessionStorage.getItem(\"loginData\") || null;\n  };\n\n  const setLoginData = value => {\n    if (value) sessionStorage.setItem(\"loginData\", value);else sessionStorage.removeItem(\"loginData\");\n  };\n\n  useEffect(() => {\n    if (props.isLoginModalShow) {\n      handleShow();\n    }\n\n    if (!show) {\n      props.handleChane();\n    }\n\n    console.log(\"location #### \", location.pathname);\n  }, [props, show]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (formData.rememberMe) {\n      setLoginData(formData);\n    } else {\n      setLoginData(null);\n    }\n\n    axios.post(API_ENDPOINT + 'auth', formData).then(res => {\n      console.log('login res', res.status, res.data);\n\n      if (res.status === 200) {\n        setLoading(false);\n\n        if (signIn({\n          token: res.data.data.token,\n          expiresIn: res.data.data.expires_at,\n          tokenType: \"Bearer\",\n          authState: {\n            user: res.data.data.user\n          } //    refreshToken: res.data.refreshToken, // Only if you are using refreshToken feature\n          //    refreshTokenExpireIn: res.data.refreshTokenExpireIn\n\n        })) {\n          // Only if you are using refreshToken feature\n          // Redirect or do-something\n          handleClose();\n          console.log(\"location.pathname \", location.pathname); // if (location.pathname === '/')\n          //     navigate(\"/dash\");\n          // else\n\n          navigate(location.pathname);\n        } else {//Throw error\n          //alert(\"Errors \\n\"+res.errors[0])\n        }\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error.response);\n\n      if (error.response.status === 422) {\n        console.log(\"errors data \", error.response.data.errors); //let errorm = error.response.data.errors[0];\n\n        console.log(\"error \\n\", error.response.data.message);\n        setFormValidationErrors(error.response.data.errors);\n        setFormErrors(error.response.data.message);\n        setTimeout(() => {\n          setFormValidationErrors({});\n          setFormErrors('');\n        }, 5000);\n      }\n    });\n  };\n\n  const handleCheckbox = status => {\n    setFormData(formData => ({ ...formData,\n      rememberMe: status\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BecomeOurPartnerModal, {\n      show: isBecomeOurPartnerModalShow,\n      onHide: closeBecomeOurPartnerModalModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      className: \"SignIn\",\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signInBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signinImg\",\n            children: /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n              effect: \"blur\" // src={publicPath + \"/assets/images/2.webp\"} \n              ,\n              src: publicPath + \"/assets/images/loginpage/loginbanner.jpg\",\n              className: \"img-fluid w-100\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SignInFrom\",\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Welcome back to Cubedots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-unstyled\",\n                  children: formValidationErrors && Object.keys(formValidationErrors).map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"text-danger\",\n                    children: formValidationErrors[error][0]\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Email Address\",\n                  onKeyUp: () => simpleValidator.current.showMessageFor('email'),\n                  value: formData.email,\n                  onChange: e => setFormData({ ...formData,\n                    email: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-danger\",\n                  children: simpleValidator.current.message('email', formData.email, 'email')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 passwordType\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: passwordType,\n                  className: \"form-control\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  onChange: e => setFormData({ ...formData,\n                    password: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"showPasswordType\",\n                  onClick: togglePassword,\n                  children: passwordType === \"password\" ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"16\",\n                    height: \"16\",\n                    fill: \"currentColor\",\n                    class: \"bi bi-eye\",\n                    viewBox: \"0 0 16 16\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 72\n                  }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"16\",\n                    height: \"16\",\n                    fill: \"currentColor\",\n                    class: \"bi bi-eye\",\n                    viewBox: \"0 0 16 16\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"form-check-input\",\n                    id: \"flexCheckDefault\",\n                    name: \"checkbox\",\n                    checked: formData.rememberMe,\n                    onChange: () => handleCheckbox(!formData.rememberMe) // required\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: \"flexCheckDefault\",\n                    children: \"Remember me\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"button\",\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  as: \"span\",\n                  animation: \"border\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this), \"  Submitting...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"my-3 text-center\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"\",\n                  className: \"form-check-label\",\n                  onClick: openForgotPasswordModal,\n                  children: \"Forgot your password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"my-3 text-center\",\n                children: [\"Not yet a member of Cubedots - \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 68\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"\",\n                  className: \"form-check-label\",\n                  onClick: showBecomeOurPartnerModal,\n                  children: \"Become Our Partner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 75\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), isForgotPasswordModalShow ? /*#__PURE__*/_jsxDEV(ForgotPasswordModal, {\n      handleChanel: closeForgotPasswordModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true);\n}\n\n_s(LoginModal, \"GylCSjR9NfLCYkrRW8v0yJTDSKw=\", false, function () {\n  return [useIsAuthenticated, useNavigate, useLocation, useSignIn];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal-backend/src/components/LoginModal.js"],"names":["useEffect","useState","useRef","useNavigate","useLocation","Link","axios","Spinner","useSignIn","useIsAuthenticated","Modal","LazyLoadImage","BecomeOurPartnerModal","SimpleReactValidator","API_ENDPOINT","ForgotPasswordModal","LoginModal","props","publicPath","process","env","PUBLIC_URL","isBecomeOurPartnerModalShow","setIsBecomeOurPartnerModalShow","simpleValidator","passwordType","setPasswordType","passwordInput","setPasswordInput","handlePasswordChange","evnt","target","value","togglePassword","isAuthenticated","navigate","location","signIn","show","setShow","handleClose","handleShow","loading","setLoading","formData","setFormData","email","password","rememberMe","formErrors","setFormErrors","formValidationErrors","setFormValidationErrors","isForgotPasswordModalShow","setisForgotPasswordModalShow","showBecomeOurPartnerModal","console","log","setTimeout","closeBecomeOurPartnerModalModal","openForgotPasswordModal","closeForgotPasswordModal","getLoginData","sessionStorage","getItem","setLoginData","setItem","removeItem","isLoginModalShow","handleChane","pathname","onSubmit","e","preventDefault","post","then","res","status","data","token","expiresIn","expires_at","tokenType","authState","user","catch","error","response","errors","message","handleCheckbox","Object","keys","map","index","current","showMessageFor"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,IAAnC,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,gBAA9C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAO,sDAAP;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,MAAIC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA7B;AAEA,QAAM,CAACC,2BAAD,EAA8BC,8BAA9B,IAAgEtB,QAAQ,CAAC,KAAD,CAA9E;AACA,QAAMuB,eAAe,GAAGtB,MAAM,CAAC,IAAIW,oBAAJ,EAAD,CAA9B;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,UAAD,CAAhD;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAM4B,oBAAoB,GAAIC,IAAD,IAAU;AACnCF,IAAAA,gBAAgB,CAACE,IAAI,CAACC,MAAL,CAAYC,KAAb,CAAhB;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIR,YAAY,KAAK,UAArB,EAAiC;AAC7BC,MAAAA,eAAe,CAAC,MAAD,CAAf;AACA;AACH;;AACDA,IAAAA,eAAe,CAAC,UAAD,CAAf;AACH,GAND;;AAQA,QAAMQ,eAAe,GAAGzB,kBAAkB,EAA1C;AACA,QAAM0B,QAAQ,GAAGhC,WAAW,EAA5B;AACA,QAAMiC,QAAQ,GAAGhC,WAAW,EAA5B;AACA,QAAMiC,MAAM,GAAG7B,SAAS,EAAxB;AAEA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkBtC,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMuC,WAAW,GAAG,MAAM;AAAED,IAAAA,OAAO,CAAC,KAAD,CAAP;AAAiB,GAA7C;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC2C,QAAD,EAAWC,WAAX,IAA0B5C,QAAQ,CAAC;AAAE6C,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE,EAAvB;AAA2BC,IAAAA,UAAU,EAAE;AAAvC,GAAD,CAAxC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkD,oBAAD,EAAuBC,uBAAvB,IAAkDnD,QAAQ,CAAC,EAAD,CAAhE,CA9BuB,CAgCvB;;AAEA,QAAM,CAACoD,yBAAD,EAA4BC,4BAA5B,IAA4DrD,QAAQ,CAAC,KAAD,CAA1E;;AAEA,QAAMsD,yBAAyB,GAAG,MAAM;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAjB,IAAAA,WAAW;AACXkB,IAAAA,UAAU,CAAC,MAAM;AACbnC,MAAAA,8BAA8B,CAAC,IAAD,CAA9B;AACH,KAFS,EAEP,GAFO,CAAV;AAKH,GARD;;AAUA,QAAMoC,+BAA+B,GAAG,MAAM;AAC1CH,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACAlC,IAAAA,8BAA8B,CAAC,KAAD,CAA9B;AACH,GAHD;;AAKA,QAAMqC,uBAAuB,GAAG,MAAM;AAClCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAjB,IAAAA,WAAW;AACXkB,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACH,KAFS,EAEP,GAFO,CAAV;AAIH,GAPD;;AAQA,QAAMO,wBAAwB,GAAG,MAAM;AACnCL,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAH,IAAAA,4BAA4B,CAAC,KAAD,CAA5B,CAFmC,CAGnC;;AACAI,IAAAA,UAAU,CAAC,MAAM;AACbjB,MAAAA,UAAU;AACb,KAFS,EAEP,GAFO,CAAV;AAGH,GAPD,CA3DuB,CAqEvB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMqB,YAAY,GAAG,MAAM;AACvB,WAAOC,cAAc,CAACC,OAAf,CAAuB,WAAvB,KAAuC,IAA9C;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIjC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EACI+B,cAAc,CAACG,OAAf,CAAuB,WAAvB,EAAoClC,KAApC,EADJ,KAGI+B,cAAc,CAACI,UAAf,CAA0B,WAA1B;AACP,GALD;;AAOAnE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,KAAK,CAACmD,gBAAV,EAA4B;AACxB3B,MAAAA,UAAU;AACb;;AACD,QAAI,CAACH,IAAL,EAAW;AACPrB,MAAAA,KAAK,CAACoD,WAAN;AACH;;AAEDb,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BrB,QAAQ,CAACkC,QAAvC;AACH,GATQ,EASN,CAACrD,KAAD,EAAQqB,IAAR,CATM,CAAT;;AAWA,QAAMiC,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA9B,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAIC,QAAQ,CAACI,UAAb,EAAyB;AACrBiB,MAAAA,YAAY,CAACrB,QAAD,CAAZ;AACH,KAFD,MAEO;AACHqB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AACD3D,IAAAA,KAAK,CAACoE,IAAN,CAAW5D,YAAY,GAAG,MAA1B,EAAkC8B,QAAlC,EACK+B,IADL,CACWC,GAAD,IAAS;AACXpB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBmB,GAAG,CAACC,MAA7B,EAAqCD,GAAG,CAACE,IAAzC;;AACA,UAAIF,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBlC,QAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,YAAIN,MAAM,CAAC;AACP0C,UAAAA,KAAK,EAAEH,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,KADd;AAEPC,UAAAA,SAAS,EAAEJ,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcG,UAFlB;AAGPC,UAAAA,SAAS,EAAE,QAHJ;AAIPC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,IAAI,EAAER,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcM;AAAtB,WAJJ,CAKP;AACA;;AANO,SAAD,CAAV,EAOI;AAAE;AACF;AACA5C,UAAAA,WAAW;AACXgB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCrB,QAAQ,CAACkC,QAA3C,EAHA,CAIA;AACA;AACA;;AACAnC,UAAAA,QAAQ,CAACC,QAAQ,CAACkC,QAAV,CAAR;AAEH,SAhBD,MAgBO,CACH;AACA;AAEH;AACJ;AACJ,KA3BL,EA2BOe,KA3BP,CA2BcC,KAAD,IAAW;AAChB3C,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B6B,KAAK,CAACC,QAAjC;;AACA,UAAID,KAAK,CAACC,QAAN,CAAeV,MAAf,KAA0B,GAA9B,EAAmC;AAC/BrB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B6B,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAAhD,EAD+B,CAE/B;;AACAhC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB6B,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBW,OAA5C;AACArC,QAAAA,uBAAuB,CAACkC,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAArB,CAAvB;AACAtC,QAAAA,aAAa,CAACoC,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBW,OAArB,CAAb;AACA/B,QAAAA,UAAU,CAAC,MAAM;AACbN,UAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAF,UAAAA,aAAa,CAAC,EAAD,CAAb;AACH,SAHS,EAGP,IAHO,CAAV;AAIH;AACJ,KAzCL;AA0CH,GAlDD;;AAqDA,QAAMwC,cAAc,GAAIb,MAAD,IAAY;AAC/BhC,IAAAA,WAAW,CAACD,QAAQ,KAAK,EAAE,GAAGA,QAAL;AAAeI,MAAAA,UAAU,EAAE6B;AAA3B,KAAL,CAAT,CAAX;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,qBAAD;AAAuB,MAAA,IAAI,EAAEvD,2BAA7B;AAA0D,MAAA,MAAM,EAAEqC;AAAlE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAErB,IAAb;AAAmB,MAAA,MAAM,EAAEE,WAA3B;AAAwC,MAAA,SAAS,EAAC,QAAlD;AAA2D,MAAA,QAAQ,MAAnE;AAAA,6BAKI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI,QAAC,aAAD;AACI,cAAA,MAAM,EAAC,MADX,CAEI;AAFJ;AAGI,cAAA,GAAG,EAAEtB,UAAU,GAAG,0CAHtB;AAKI,cAAA,SAAS,EAAC,iBALd;AAMI,cAAA,GAAG,EAAC;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAM,cAAA,QAAQ,EAAEqD,QAAhB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,uCAGI;AAAI,kBAAA,SAAS,EAAC,eAAd;AAAA,4BACKpB,oBAAoB,IAAIwC,MAAM,CAACC,IAAP,CAAYzC,oBAAZ,EAAkC0C,GAAlC,CAAsC,CAACP,KAAD,EAAQQ,KAAR,kBAC3D;AAAI,oBAAA,SAAS,EAAC,aAAd;AAAA,8BAAyC3C,oBAAoB,CAACmC,KAAD,CAApB,CAA4B,CAA5B;AAAzC,qBAAiCQ,KAAjC;AAAA;AAAA;AAAA;AAAA,0BADqB;AAD7B;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAUI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACI;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,SAAS,EAAC,cAA9B;AAA6C,kBAAA,IAAI,EAAC,OAAlD;AAA0D,kBAAA,WAAW,EAAC,eAAtE;AAAsF,kBAAA,OAAO,EAAE,MAAMtE,eAAe,CAACuE,OAAhB,CAAwBC,cAAxB,CAAuC,OAAvC,CAArG;AAAsJ,kBAAA,KAAK,EAAEpD,QAAQ,CAACE,KAAtK;AAA6K,kBAAA,QAAQ,EAAG0B,CAAD,IAAO3B,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,oBAAAA,KAAK,EAAE0B,CAAC,CAACzC,MAAF,CAASC;AAA/B,mBAAD;AAAzM;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,4BAA8BR,eAAe,CAACuE,OAAhB,CAAwBN,OAAxB,CAAgC,OAAhC,EAAyC7C,QAAQ,CAACE,KAAlD,EAAyD,OAAzD;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAcI;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACI;AAAO,kBAAA,IAAI,EAAErB,YAAb;AAA2B,kBAAA,SAAS,EAAC,cAArC;AAAoD,kBAAA,IAAI,EAAC,UAAzD;AAAoE,kBAAA,WAAW,EAAC,UAAhF;AAA2F,kBAAA,QAAQ,EAAG+C,CAAD,IAAO3B,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,oBAAAA,QAAQ,EAAEyB,CAAC,CAACzC,MAAF,CAASC;AAAlC,mBAAD;AAAvH;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,kBAAA,SAAS,EAAC,kBAAhB;AAAmC,kBAAA,OAAO,EAAEC,cAA5C;AAAA,4BACKR,YAAY,KAAK,UAAjB,gBAA8B;AAAK,oBAAA,KAAK,EAAC,4BAAX;AAAwC,oBAAA,KAAK,EAAC,IAA9C;AAAmD,oBAAA,MAAM,EAAC,IAA1D;AAA+D,oBAAA,IAAI,EAAC,cAApE;AAAmF,oBAAA,KAAK,EAAC,WAAzF;AAAqG,oBAAA,OAAO,EAAC,WAA7G;AAAA,4CAC3B;AAAM,sBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,4BAD2B,eAE3B;AAAM,sBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,4BAF2B;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA9B,gBAGQ;AAAK,oBAAA,KAAK,EAAC,4BAAX;AAAwC,oBAAA,KAAK,EAAC,IAA9C;AAAmD,oBAAA,MAAM,EAAC,IAA1D;AAA+D,oBAAA,IAAI,EAAC,cAApE;AAAmF,oBAAA,KAAK,EAAC,WAAzF;AAAqG,oBAAA,OAAO,EAAC,WAA7G;AAAA,4CACL;AAAM,sBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,4BADK,eAEL;AAAM,sBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,4BAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAJb;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdJ,eA2BI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACI;AACI,oBAAA,IAAI,EAAC,UADT;AAEI,oBAAA,SAAS,EAAC,kBAFd;AAGI,oBAAA,EAAE,EAAC,kBAHP;AAII,oBAAA,IAAI,EAAC,UAJT;AAKI,oBAAA,OAAO,EAAEmB,QAAQ,CAACI,UALtB;AAMI,oBAAA,QAAQ,EAAE,MAAM0C,cAAc,CAAC,CAAC9C,QAAQ,CAACI,UAAX,CANlC,CAOA;;AAPA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAUI;AAAO,oBAAA,SAAS,EAAC,kBAAjB;AAAoC,oBAAA,OAAO,EAAC,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA3BJ,EA6CKN,OAAO,gBACJ;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAoC,gBAAA,IAAI,EAAC,QAAzC;AAAkD,gBAAA,QAAQ,MAA1D;AAAA,wCACI,QAAC,OAAD;AAAS,kBAAA,EAAE,EAAC,MAAZ;AAAmB,kBAAA,SAAS,EAAC,QAA7B;AAAsC,kBAAA,IAAI,EAAC,IAA3C;AAAgD,kBAAA,IAAI,EAAC,QAArD;AAA8D,iCAAY;AAA1E;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADI,gBAKJ;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAoC,gBAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlDR,eAsDI;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,EAAT;AAAY,kBAAA,SAAS,EAAC,kBAAtB;AAAyC,kBAAA,OAAO,EAAEkB,uBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAtDJ,eA0DI;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,2EACmC;AAAA;AAAA;AAAA;AAAA,wBADnC,oBAC0C,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,EAAT;AAAY,kBAAA,SAAS,EAAC,kBAAtB;AAAyC,kBAAA,OAAO,EAAEL,yBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1DJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAgGKF,yBAAyB,gBACtB,QAAC,mBAAD;AAAqB,MAAA,YAAY,EAAEQ;AAAnC;AAAA;AAAA;AAAA;AAAA,YADsB,GAEtB,EAlGR;AAAA,kBADJ;AAuGH;;GAnQQ7C,U;UAkBmBP,kB,EACPN,W,EACAC,W,EACFI,S;;;KArBVQ,U;AAqQT,eAAeA,UAAf","sourcesContent":["\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport BecomeOurPartnerModal from \"./home/BecomeOurPartnerModal\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { API_ENDPOINT } from '../common/Constants';\n\nimport ForgotPasswordModal from './ForgotPasswordModal';\n\n\nfunction LoginModal(props) {\n    let publicPath = process.env.PUBLIC_URL;\n\n    const [isBecomeOurPartnerModalShow, setIsBecomeOurPartnerModalShow] = useState(false);\n    const simpleValidator = useRef(new SimpleReactValidator());\n    const [passwordType, setPasswordType] = useState(\"password\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const handlePasswordChange = (evnt) => {\n        setPasswordInput(evnt.target.value);\n    }\n    const togglePassword = () => {\n        if (passwordType === \"password\") {\n            setPasswordType(\"text\")\n            return;\n        }\n        setPasswordType(\"password\")\n    }\n\n    const isAuthenticated = useIsAuthenticated();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const signIn = useSignIn();\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => { setShow(false); }\n    const handleShow = () => setShow(true);\n\n    const [loading, setLoading] = useState(false);\n    const [formData, setFormData] = useState({ email: '', password: '', rememberMe: false });\n    const [formErrors, setFormErrors] = useState('');\n    const [formValidationErrors, setFormValidationErrors] = useState({});\n\n    //forgot password\n\n    const [isForgotPasswordModalShow, setisForgotPasswordModalShow] = useState(false);\n\n    const showBecomeOurPartnerModal = () => {\n        console.log(\"showBecomeOurPartnerModal clicked\");\n        handleClose();\n        setTimeout(() => {\n            setIsBecomeOurPartnerModalShow(true);\n        }, 300);\n\n\n    }\n\n    const closeBecomeOurPartnerModalModal = () => {\n        console.log(\"closeBecomeOurPartnerModalModal trigger\");\n        setIsBecomeOurPartnerModalShow(false);\n    }\n\n    const openForgotPasswordModal = () => {\n        console.log('openForgotPasswordModal click manually');\n        handleClose();\n        setTimeout(() => {\n            setisForgotPasswordModalShow(true);\n        }, 300);\n\n    };\n    const closeForgotPasswordModal = () => {\n        console.log('closeForgotPasswordModal trigger');\n        setisForgotPasswordModalShow(false);\n        // handleShow();\n        setTimeout(() => {\n            handleShow();\n        }, 300);\n    };\n\n\n    // if (isAuthenticated()) {\n    //     // Redirect to dashboard\n    //     console.log(\"valid Redirect to dashboard\");\n    //     return (\n    //         <Navigate to=\"/dash\" replace />\n    //     );\n    // }\n\n    const getLoginData = () => {\n        return sessionStorage.getItem(\"loginData\") || null;\n    };\n\n    const setLoginData = (value) => {\n        if (value)\n            sessionStorage.setItem(\"loginData\", value);\n        else\n            sessionStorage.removeItem(\"loginData\");\n    };\n\n    useEffect(() => {\n        if (props.isLoginModalShow) {\n            handleShow();\n        }\n        if (!show) {\n            props.handleChane();\n        }\n\n        console.log(\"location #### \", location.pathname);\n    }, [props, show])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setLoading(true);\n        if (formData.rememberMe) {\n            setLoginData(formData);\n        } else {\n            setLoginData(null);\n        }\n        axios.post(API_ENDPOINT + 'auth', formData)\n            .then((res) => {\n                console.log('login res', res.status, res.data)\n                if (res.status === 200) {\n                    setLoading(false);\n                    if (signIn({\n                        token: res.data.data.token,\n                        expiresIn: res.data.data.expires_at,\n                        tokenType: \"Bearer\",\n                        authState: { user: res.data.data.user },\n                        //    refreshToken: res.data.refreshToken, // Only if you are using refreshToken feature\n                        //    refreshTokenExpireIn: res.data.refreshTokenExpireIn\n                    })) { // Only if you are using refreshToken feature\n                        // Redirect or do-something\n                        handleClose();\n                        console.log(\"location.pathname \", location.pathname);\n                        // if (location.pathname === '/')\n                        //     navigate(\"/dash\");\n                        // else\n                        navigate(location.pathname);\n\n                    } else {\n                        //Throw error\n                        //alert(\"Errors \\n\"+res.errors[0])\n\n                    }\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error.response);\n                if (error.response.status === 422) {\n                    console.log(\"errors data \", error.response.data.errors);\n                    //let errorm = error.response.data.errors[0];\n                    console.log(\"error \\n\", error.response.data.message)\n                    setFormValidationErrors(error.response.data.errors);\n                    setFormErrors(error.response.data.message);\n                    setTimeout(() => {\n                        setFormValidationErrors({});\n                        setFormErrors('');\n                    }, 5000);\n                }\n            })\n    }\n\n\n    const handleCheckbox = (status) => {\n        setFormData(formData => ({ ...formData, rememberMe: status }));\n    }\n\n    return (\n        <>\n            <BecomeOurPartnerModal show={isBecomeOurPartnerModalShow} onHide={closeBecomeOurPartnerModalModal} />\n            <Modal show={show} onHide={handleClose} className=\"SignIn\" centered>\n\n                {/* <div className=\"modal fade SignIn\" id=\"SignIn\" tabIndex=\"-1\" aria-labelledby=\"SignInLabel\" aria-hidden=\"true\"> */}\n                {/* <div className=\"modal-dialog modal-dialog-centered\">\n                    <div className=\"modal-content\"> */}\n                <div className=\"signInBox\">\n                    <div className=\"modal-body\">\n                        <div className='signinImg'>\n                            <LazyLoadImage\n                                effect=\"blur\"\n                                // src={publicPath + \"/assets/images/2.webp\"} \n                                src={publicPath + \"/assets/images/loginpage/loginbanner.jpg\"}\n\n                                className=\"img-fluid w-100\"\n                                alt=\"\" />\n                            {/* <img src={publicPath + \"/assets/images/2.webp\"} className='img-fluid' alt='' /> */}\n                        </div>\n                        <div className='SignInFrom'>\n                            <Modal.Header closeButton>\n                            </Modal.Header>\n                            <h2>Sign In</h2>\n                            <p>Welcome back to Cubedots</p>\n                            <form onSubmit={onSubmit}>\n                                <div className=\"mb-3\">\n                                    {/* {loading ? 'loading...' : ''} */}\n                                    {/* {formErrors} */}\n                                    <ul className=\"list-unstyled\">\n                                        {formValidationErrors && Object.keys(formValidationErrors).map((error, index) => (\n                                            <li className=\"text-danger\" key={index}>{formValidationErrors[error][0]}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email Address\" onKeyUp={() => simpleValidator.current.showMessageFor('email')} value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n                                    <div className='text-danger'>{simpleValidator.current.message('email', formData.email, 'email')}</div>\n                                </div>\n                                <div className=\"mb-3 passwordType\">\n                                    <input type={passwordType} className=\"form-control\" name=\"password\" placeholder='Password' onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n                                    <span className=\"showPasswordType\" onClick={togglePassword}>\n                                        {passwordType === \"password\" ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-eye\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                                            <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                                        </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-eye\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                                            <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                                        </svg>}\n                                    </span>\n                                </div>\n\n                                <div className=\"mb-3\">\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"form-check-input\"\n                                            id=\"flexCheckDefault\"\n                                            name=\"checkbox\"\n                                            checked={formData.rememberMe}\n                                            onChange={() => handleCheckbox(!formData.rememberMe)}\n                                        // required\n                                        />\n                                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                                            Remember me\n                                        </label>\n\n                                    </div>\n                                </div>\n\n                                {loading ?\n                                    <button className=\"btn btn-primary\" type=\"button\" disabled >\n                                        <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                                    </button>\n                                    :\n                                    <button className=\"btn btn-primary\" type=\"submit\">Login</button>\n                                }\n\n\n                                <div className=\"my-3 text-center\">\n                                    <Link to=\"\" className=\"form-check-label\" onClick={openForgotPasswordModal}>Forgot your password?</Link>\n                                </div>\n\n                                <div className=\"my-3 text-center\">\n                                    Not yet a member of Cubedots - <br /> <Link to=\"\" className=\"form-check-label\" onClick={showBecomeOurPartnerModal}>Become Our Partner</Link>\n                                </div>\n                            </form>\n\n                        </div>\n\n                    </div>\n                    {/* </div>\n                </div> */}\n                    {/* </div> */}\n                </div>\n\n            </Modal>\n            {isForgotPasswordModalShow ? (\n                <ForgotPasswordModal handleChanel={closeForgotPasswordModal} />\n            ) : ''}\n\n        </>\n    );\n}\n\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}