{"ast":null,"code":"var _jsxFileName = \"/var/www/html/new_cubedots_portal/src/pages/ProjectsPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_ENDPOINT } from \"../common/Constants\";\nimport ProjectList from '../components/project/ProjectList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProjectsPage() {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const [projectsLoading, setProjectsLoading] = useState(false);\n  const [projects, setProjects] = useState([]);\n  const [projectsAll, setProjectsAll] = useState([]);\n  const [cities, setCites] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [prices, setPrices] = useState([]);\n  const [areaMin, setAreaMin] = useState(0);\n  const [areaMax, setAreaMax] = useState(0);\n  const [priceMin, setPriceMin] = useState(0);\n  const [priceMax, setPriceMax] = useState(0);\n\n  async function fetchProject() {\n    setProjectsLoading(true);\n\n    try {\n      const res = await axios.get(API_ENDPOINT + \"projects/list\");\n\n      if (res.data.data) {\n        let data = res.data.data;\n        setProjectsLoading(false);\n        setProjectsAll(data.projects);\n        setProjects(data.projects);\n        setCites(data.filters.cities);\n        setAreas(makeGroupArea(data.filters.min_built_up_area, data.filters.max_built_up_area));\n        setPrices(makeGroupPrice(data.filters.min_price, data.filters.max_price));\n        setAreaMin(data.filters.min_built_up_area);\n        setAreaMax(data.filters.max_built_up_area);\n        setPriceMin(data.filters.min_price);\n        setPriceMax(data.filters.max_price);\n      }\n    } catch (error) {\n      console.error(\"error \", error);\n      setProjectsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n    fetchProject();\n  }, []);\n\n  const searchNow = e => {\n    let city = document.querySelector('#city').value;\n    let area = document.querySelector('#area').value;\n    let price = document.querySelector('#price').value; //console.log('searchNow' ,block,floor,area,prices);\n\n    let areaArray = area ? area.split(' - ') : [areaMin, areaMax];\n    let priceArray = price ? price.split(' - ') : [priceMin, priceMax]; // console.log('searchNow after' ,block,floor,areaArray,priceArray);\n\n    let filterProjects = projectsAll.filter(item => {\n      return city ? item.city === city : true;\n    }).filter(item => {\n      //console.log(\"item.area \",item.built_up_area);\n      return areaArray.length > 0 ? item.min_built_up_area >= areaArray[0] && item.max_built_up_area <= areaArray[1] : true;\n    }).filter(item => {\n      //console.log(\"item.price \",item.price);\n      return priceArray.length > 0 ? item.min_price >= priceArray[0] && item.max_price <= priceArray[1] : true;\n    });\n    console.log(\"filterProjects\", projectsAll.length, filterProjects.length, filterProjects);\n    setProjects(filterProjects);\n  };\n\n  function makeGroupArea(min, max) {\n    let minarea = min;\n    let maxarea = max + 1;\n    let tempArea = (maxarea - minarea) / 4 + 1;\n    let tempAreaSum = minarea;\n    let buildupArea = [];\n\n    for (let i = 1; i <= 4; i++) {\n      let mina = tempAreaSum;\n      let maxa = i === 4 ? maxarea : tempAreaSum + tempArea;\n      buildupArea.push(parseInt(mina) + \" - \" + parseInt(maxa));\n      tempAreaSum = parseInt(tempAreaSum + tempArea);\n    } //console.log(\"buildupArea\", buildupArea);\n\n\n    return buildupArea;\n  }\n\n  function makeGroupPrice(min, max) {\n    let minPrice = min;\n    let maxPrice = max + 1;\n    let tempPrice = (maxPrice - minPrice) / 4 + 1;\n    let tempPriceSum = minPrice;\n    let unitPrice = [];\n\n    for (let i = 1; i <= 4; i++) {\n      let mina = tempPriceSum;\n      let maxa = i === 4 ? maxPrice : tempPriceSum + tempPrice;\n      unitPrice.push(parseInt(mina) + \" - \" + parseInt(maxa));\n      tempPriceSum = parseInt(tempPriceSum + tempPrice);\n    } //console.log(\"unitPrice\", unitPrice);\n\n\n    return unitPrice;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projectList mt-70\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"vegonHeading\",\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectListItems\",\n      children: projectsLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 text-center\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [projects.length < 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: \"No project found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), projects.length > 0 && projects.map((row, i) => /*#__PURE__*/_jsxDEV(ProjectList, {\n          row: row\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectsPage, \"otDIPreA7OfkYi4oJWsZ7upShbg=\");\n\n_c = ProjectsPage;\nexport default ProjectsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"sources":["/var/www/html/new_cubedots_portal/src/pages/ProjectsPage.js"],"names":["useEffect","useState","axios","API_ENDPOINT","ProjectList","ProjectsPage","publicPath","process","env","PUBLIC_URL","projectsLoading","setProjectsLoading","projects","setProjects","projectsAll","setProjectsAll","cities","setCites","areas","setAreas","prices","setPrices","areaMin","setAreaMin","areaMax","setAreaMax","priceMin","setPriceMin","priceMax","setPriceMax","fetchProject","res","get","data","filters","makeGroupArea","min_built_up_area","max_built_up_area","makeGroupPrice","min_price","max_price","error","console","window","scrollTo","top","left","behavior","searchNow","e","city","document","querySelector","value","area","price","areaArray","split","priceArray","filterProjects","filter","item","length","log","min","max","minarea","maxarea","tempArea","tempAreaSum","buildupArea","i","mina","maxa","push","parseInt","minPrice","maxPrice","tempPrice","tempPriceSum","unitPrice","map","row"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { API_ENDPOINT } from \"../common/Constants\";\n\nimport ProjectList from '../components/project/ProjectList';\n\n\nfunction ProjectsPage() {\n\n    let publicPath = process.env.PUBLIC_URL;\n\n    const [projectsLoading, setProjectsLoading] = useState(false);\n\n    const [projects, setProjects] = useState([]);\n    const [projectsAll, setProjectsAll] = useState([]);\n\n    const [cities, setCites] = useState([]);\n    const [areas, setAreas] = useState([]);\n    const [prices, setPrices] = useState([]);\n\n    const [areaMin, setAreaMin] = useState(0);\n    const [areaMax, setAreaMax] = useState(0);\n\n    const [priceMin, setPriceMin] = useState(0);\n    const [priceMax, setPriceMax] = useState(0);\n\n    async function fetchProject() {\n        setProjectsLoading(true);\n        try {\n            const res = await axios.get(API_ENDPOINT + \"projects/list\");\n            if (res.data.data) {\n                let data = res.data.data;\n                setProjectsLoading(false);\n                setProjectsAll(data.projects);\n                setProjects(data.projects);\n                setCites(data.filters.cities);\n\n                setAreas(makeGroupArea(data.filters.min_built_up_area, data.filters.max_built_up_area));\n                setPrices(makeGroupPrice(data.filters.min_price, data.filters.max_price));\n\n                setAreaMin(data.filters.min_built_up_area);\n                setAreaMax(data.filters.max_built_up_area);\n\n                setPriceMin(data.filters.min_price);\n                setPriceMax(data.filters.max_price);\n\n            }\n        } catch (error) {\n            console.error(\"error \", error);\n            setProjectsLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        window.scrollTo({ top:0,left:0,behavior:'smooth'});\n        fetchProject();\n    }, []);\n\n    const searchNow = (e) => {\n\n        let city = document.querySelector('#city').value;\n        let area = document.querySelector('#area').value;\n        let price = document.querySelector('#price').value;\n        //console.log('searchNow' ,block,floor,area,prices);\n        let areaArray = area ? area.split(' - ') : [areaMin, areaMax];\n        let priceArray = price ? price.split(' - ') : [priceMin, priceMax];\n\n        // console.log('searchNow after' ,block,floor,areaArray,priceArray);\n        let filterProjects = projectsAll.filter((item) => {\n            return city ? (item.city === city) : true\n        }).filter((item) => {\n            //console.log(\"item.area \",item.built_up_area);\n            return areaArray.length > 0 ? (item.min_built_up_area >= areaArray[0] && item.max_built_up_area <= areaArray[1]) : true\n        }).filter((item) => {\n            //console.log(\"item.price \",item.price);\n            return priceArray.length > 0 ? (item.min_price >= priceArray[0] && item.max_price <= priceArray[1]) : true\n        })\n        console.log(\"filterProjects\", projectsAll.length, filterProjects.length, filterProjects);\n\n        setProjects(filterProjects);\n    }\n\n    function makeGroupArea(min, max) {\n        let minarea = min;\n        let maxarea = max + 1;\n        let tempArea = (maxarea - minarea) / 4 + 1;\n        let tempAreaSum = minarea;\n        let buildupArea = [];\n        for (let i = 1; i <= 4; i++) {\n            let mina = tempAreaSum;\n            let maxa = i === 4 ? maxarea : tempAreaSum + tempArea;\n            buildupArea.push(parseInt(mina) + \" - \" + parseInt(maxa));\n            tempAreaSum = parseInt(tempAreaSum + tempArea);\n        }\n        //console.log(\"buildupArea\", buildupArea);\n        return buildupArea;\n    }\n\n    function makeGroupPrice(min, max) {\n        let minPrice = min;\n        let maxPrice = max + 1;\n        let tempPrice = (maxPrice - minPrice) / 4 + 1;\n        let tempPriceSum = minPrice;\n        let unitPrice = [];\n        for (let i = 1; i <= 4; i++) {\n            let mina = tempPriceSum;\n            let maxa = i === 4 ? maxPrice : tempPriceSum + tempPrice;\n            unitPrice.push(parseInt(mina) + \" - \" + parseInt(maxa));\n            tempPriceSum = parseInt(tempPriceSum + tempPrice);\n        }\n        //console.log(\"unitPrice\", unitPrice);\n        return unitPrice;\n    }\n\n\n    return (\n        <div className=\"projectList mt-70\">\n            {/* <div className=\"search\">\n                <div className=\"container\">\n\n                    <div className=\"searchFilterBar\">\n                        <div className=\"row justify-content-between align-items-baseline\">\n\n                            <div className=\"col-md-2\">\n                                <p className=\"filterSearch\">Filter Your Search :</p>\n                            </div>\n                            <div className=\"col-md-2\">\n                                <div className=\"input-group select-group\">\n                                    <span className=\"input-group-addon\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-geo-alt\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A31.493 31.493 0 0 1 8 14.58a31.481 31.481 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z\" />\n                                            <path d=\"M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                                        </svg>\n                                    </span>\n\n\n                                    <select className=\"form-control\" id=\"city\" placeholder=\"City\" name=\"city\" defaultValue={''}>\n                                        <option value=\"\">City</option>\n                                        <option value=\"\">All</option>\n                                        {cities.length > 0 && cities.map((row, index) => <option value={row} key={index} >{row}</option>)}\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-2\">\n                                <div className=\"input-group select-group\">\n                                    <span className=\"input-group-addon\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pin-map-fill\" viewBox=\"0 0 16 16\">\n                                            <path fillRule=\"evenodd\" d=\"M3.1 11.2a.5.5 0 0 1 .4-.2H6a.5.5 0 0 1 0 1H3.75L1.5 15h13l-2.25-3H10a.5.5 0 0 1 0-1h2.5a.5.5 0 0 1 .4.2l3 4a.5.5 0 0 1-.4.8H.5a.5.5 0 0 1-.4-.8l3-4z\" />\n                                            <path fillRule=\"evenodd\" d=\"M4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999z\" />\n                                        </svg>\n                                    </span>\n                                    <select className=\"form-control\" id=\"area\" placeholder=\"Area\" name=\"area\" defaultValue={''}>\n                                        <option value=\"\">Area</option>\n                                        <option value=\"\">All</option>\n                                        {areas.length > 0 && areas.map((row, index) => <option value={row} key={index} >{row} sq.m.</option>)}\n                                    </select>\n\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-2\">\n                                <div className=\"input-group select-group\">\n                                    <span className=\"input-group-addon\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-currency-dollar\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M4 10.781c.148 1.667 1.513 2.85 3.591 3.003V15h1.043v-1.216c2.27-.179 3.678-1.438 3.678-3.3 0-1.59-.947-2.51-2.956-3.028l-.722-.187V3.467c1.122.11 1.879.714 2.07 1.616h1.47c-.166-1.6-1.54-2.748-3.54-2.875V1H7.591v1.233c-1.939.23-3.27 1.472-3.27 3.156 0 1.454.966 2.483 2.661 2.917l.61.162v4.031c-1.149-.17-1.94-.8-2.131-1.718H4zm3.391-3.836c-1.043-.263-1.6-.825-1.6-1.616 0-.944.704-1.641 1.8-1.828v3.495l-.2-.05zm1.591 1.872c1.287.323 1.852.859 1.852 1.769 0 1.097-.826 1.828-2.2 1.939V8.73l.348.086z\" />\n                                        </svg>\n                                    </span>\n\n                                    <select className=\"form-control\" id=\"price\" placeholder=\"Price\" name=\"price\" defaultValue={''}>\n                                        <option value=\"\">Price</option>\n                                        <option value=\"\">All</option>\n                                        {prices.length > 0 && prices.map((row, index) => <option value={row} key={index} >{row}</option>)}\n                                    </select>\n\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-2\">\n                                <button type=\"button\" className=\"btnSerach\" onClick={searchNow}>Search</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> */}\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\"><h2 className=\"vegonHeading\">Projects</h2></div>\n            </div>\n            </div>\n            {/* project list */}\n            <div className=\"projectListItems\">\n\n                {projectsLoading ? (\n                    <>\n                        <div className=\"row\"><div className=\"col-md-12 text-center\">Loading...</div></div>\n                    </>\n                ) : (\n                    <>\n                        {projects.length < 1 ? <div className=\"row\"><div className=\"col text-center\">No project found.</div></div> : <></>}\n                        {projects.length > 0 && projects.map((row, i) =>\n                            <ProjectList row={row} key={i} />\n                        )}\n                    </>\n                )\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectsPage;"]},"metadata":{},"sourceType":"module"}