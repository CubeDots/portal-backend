{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/dashboard/CreateAppointment.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useLocation, Navigate, Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useAuthUser, useAuthHeader } from 'react-auth-kit';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateAppointment(props) {\n  _s();\n\n  const authHeader = useAuthHeader();\n  const auth = useAuthUser();\n  let publicPath = process.env.PUBLIC_URL;\n  const [countriesLoading, setCountriesLoading] = useState(false);\n  const [countries, setCountries] = useState([]);\n  const [locationsLoading, setLocationsLoading] = useState(false);\n  const [locations, setLocations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    first_name: null,\n    last_name: null,\n    email: null,\n    country: null,\n    mobile: null,\n    appointment_date: null,\n    appointment_time: null,\n    location: null\n  });\n  const [securityCode, setSecurityCode] = useState(null);\n  useEffect(() => {\n    genRandomString();\n    setLoading(false);\n    fetchCountries();\n    fetchLocations();\n  }, []);\n\n  async function fetchLocations() {\n    setLocationsLoading(true);\n\n    try {\n      //const res = await axios.get(publicPath + \"/assets/data/countries.json\");\n      const res = await axios.post(API_ENDPOINT + \"orgzit/projects\", '', {\n        headers: {\n          Authorization: authHeader()\n        }\n      });\n\n      if (res.data) {\n        console.log(\"res.data \", res.data.data);\n        setLocationsLoading(false);\n        setLocations(res.data.data);\n      }\n    } catch (error) {\n      console.error(\"error \", error);\n      setLocationsLoading(false);\n    }\n  }\n\n  const handleChangeLocation = e => {\n    e.persist();\n    let selectedLocationName = e.target.value;\n    setFormData(formData => ({ ...formData,\n      location: selectedLocationName\n    }));\n    let locationsList = locations;\n    /*let newDialCode = Object.keys(locationsList).filter((x) => {\n        return locationsList[x].location_name === selectedCountryName;\n    }).map((x) => {\n        return locationsList[x].dial_code;\n    });*/\n  };\n\n  async function fetchCountries() {\n    setCountriesLoading(true);\n\n    try {\n      const res = await axios.get(publicPath + \"/assets/data/countries.json\");\n\n      if (res.data) {\n        //console.log(\"res.data \",res.data.data);\n        setCountriesLoading(false);\n        setCountries(res.data.data);\n      }\n    } catch (error) {\n      console.error(\"error \", error);\n      setCountriesLoading(false);\n    }\n  }\n\n  const handleChangeCountry = e => {\n    e.persist();\n    let selectedCountryName = e.target.value;\n    setFormData(formData => ({ ...formData,\n      country: selectedCountryName\n    }));\n    let countriesList = countries;\n    let newDialCode = Object.keys(countriesList).filter(x => {\n      return countriesList[x].country_name === selectedCountryName;\n    }).map(x => {\n      return countriesList[x].dial_code;\n    });\n    let dial_code = newDialCode.length ? newDialCode[0] : '';\n    setFormData(formData => ({ ...formData,\n      dial_code: dial_code\n    }));\n  };\n\n  const handleChangeTerms = status => {\n    console.log(\"terms \", status);\n    setFormData(formData => ({ ...formData,\n      terms: status\n    }));\n  };\n\n  const genRandomString = () => {\n    var text = \"\";\n    var length = 6;\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    setSecurityCode(text);\n    return text;\n  };\n\n  const resetFrom = () => {\n    setFormData({\n      first_name: null,\n      last_name: null,\n      email: null,\n      country: null,\n      mobile: null,\n      appointment_date: null,\n      appointment_time: null,\n      location: null\n    });\n    document.getElementById(\"form1\").reset();\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"formData \", formData);\n\n    if (formData.country === null) {\n      alert(\"Please select country name.\");\n      return false;\n    }\n\n    if (formData.mobile === null) {\n      alert(\"Please enter mobile number.\");\n      return false;\n    }\n\n    if (formData.appointment_date === null) {\n      alert(\"Please select appointment date.\");\n      return false;\n    }\n\n    if (formData.appointment_time === null) {\n      alert(\"Please select appointment time.\");\n      return false;\n    }\n\n    if (formData.location === null) {\n      alert(\"Please select Location name.\");\n      return false;\n    }\n\n    setLoading(true);\n    axios.post(API_ENDPOINT + 'orgzit/create_appointment', formData, {\n      headers: {\n        Authorization: authHeader()\n      }\n    }).then(res => {\n      console.log('res ### ', res.status, res.data);\n\n      if (res.status === 200) {\n        setLoading(false);\n        genRandomString();\n        resetFrom();\n        setTimeout(() => {\n          alert(res.data.message);\n          window.location.reload();\n        }, 1000);\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error);\n\n      if (error) {\n        //if (error.response.status === 422) {\n        let errors = error.response.data.errors;\n        let msg = error.response.data.message + \"\\n\";\n        Object.keys(errors).map((error, index) => console.log(error) //msg += errors[error][0] + \"\\n\"\n        );\n        alert(msg); //}\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      className: \"enrollmentModal\",\n      backdrop: \"static\",\n      keyboard: false,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"p-3 enrollmentModal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"enrollmentContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Create Appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                id: \"form1\",\n                onSubmit: onSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: auth().user.name,\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"Full Name\",\n                      name: \"first_name\",\n                      defaultValue: formData.first_name,\n                      onChange: e => setFormData({ ...formData,\n                        first_name: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: auth().user.email,\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"Email Address\",\n                      name: \"email\",\n                      defaultValue: formData.email,\n                      onChange: e => setFormData({ ...formData,\n                        email: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col mb-3\",\n                    children: countries.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-select\",\n                        placeholder: \"Country\",\n                        name: \"country\",\n                        onChange: handleChangeCountry,\n                        defaultValue: formData.country_name,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select Country\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 57\n                        }, this), countries.length > 0 && countries.map((row, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: row.country_name,\n                          children: row.country_name\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 112\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"input-group-text\",\n                        id: \"basic-addon1\",\n                        children: formData.dial_code ? formData.dial_code : '+91'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-control\",\n                        type: \"text\",\n                        placeholder: \"Mobile No.\",\n                        name: \"mobile\",\n                        defaultValue: formData.mobile,\n                        onChange: e => setFormData({ ...formData,\n                          mobile: e.target.value\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mb-1\",\n                      children: \"Appointment Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      type: \"date\",\n                      placeholder: \"Appointment Date\",\n                      name: \"appointment_date\",\n                      defaultValue: formData.appointment_date,\n                      onChange: e => setFormData({ ...formData,\n                        appointment_date: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mb-1\",\n                      children: \"Appointment Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      type: \"time\",\n                      placeholder: \"Appointment Time\",\n                      name: \"appointment_time\",\n                      defaultValue: formData.appointment_time,\n                      onChange: e => setFormData({ ...formData,\n                        appointment_time: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col mb-3\",\n                    children: locations.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-select\",\n                        placeholder: \"Location\",\n                        name: \"location\",\n                        onChange: handleChangeLocation,\n                        defaultValue: formData.location_name,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select Location\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 57\n                        }, this), locations.length > 0 && locations.map((row, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: row.OrgzitRecordId,\n                          children: row.ProjectName\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 112\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btntheme\",\n                      type: \"button\",\n                      disabled: true,\n                      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                        as: \"span\",\n                        animation: \"border\",\n                        size: \"sm\",\n                        role: \"status\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 53\n                      }, this), \"  Submitting...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btntheme\",\n                      type: \"submit\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateAppointment, \"PfvsWfNuUYjX7kVUWwhQ6jk6HcA=\", false, function () {\n  return [useAuthHeader, useAuthUser];\n});\n\n_c = CreateAppointment;\nexport default CreateAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAppointment\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/dashboard/CreateAppointment.js"],"names":["useEffect","useState","useNavigate","useLocation","Navigate","Link","axios","useAuthUser","useAuthHeader","Spinner","API_ENDPOINT","Modal","CreateAppointment","props","authHeader","auth","publicPath","process","env","PUBLIC_URL","countriesLoading","setCountriesLoading","countries","setCountries","locationsLoading","setLocationsLoading","locations","setLocations","loading","setLoading","formData","setFormData","first_name","last_name","email","country","mobile","appointment_date","appointment_time","location","securityCode","setSecurityCode","genRandomString","fetchCountries","fetchLocations","res","post","headers","Authorization","data","console","log","error","handleChangeLocation","e","persist","selectedLocationName","target","value","locationsList","get","handleChangeCountry","selectedCountryName","countriesList","newDialCode","Object","keys","filter","x","country_name","map","dial_code","length","handleChangeTerms","status","terms","text","possible","i","charAt","Math","floor","random","resetFrom","document","getElementById","reset","onSubmit","preventDefault","alert","then","setTimeout","message","window","reload","catch","errors","response","msg","index","user","name","row","location_name","OrgzitRecordId","ProjectName"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate, useLocation, Navigate, Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useAuthUser, useAuthHeader } from 'react-auth-kit';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport Modal from 'react-bootstrap/Modal';\n\n\nfunction CreateAppointment(props) {\n    const authHeader = useAuthHeader();\n    const auth = useAuthUser();\n    let publicPath = process.env.PUBLIC_URL;\n\n    const [countriesLoading, setCountriesLoading] = useState(false);\n    const [countries, setCountries] = useState([]);\n\n    const [locationsLoading, setLocationsLoading] = useState(false);\n    const [locations, setLocations] = useState([]);\n\n    const [loading, setLoading] = useState(false);\n    const [formData, setFormData] = useState({ first_name: null, last_name: null, email: null, country: null, mobile: null, appointment_date: null, appointment_time: null,location: null });\n    const [securityCode, setSecurityCode] = useState(null);\n\n    useEffect(() => {\n\n        genRandomString();\n        setLoading(false);\n        fetchCountries();\n        fetchLocations();\n\n    }, []);\n\n    async function fetchLocations() {\n        setLocationsLoading(true);\n        try {\n            //const res = await axios.get(publicPath + \"/assets/data/countries.json\");\n            const res = await axios.post(API_ENDPOINT + \"orgzit/projects\", '', { headers: { Authorization: authHeader() } });\n            if (res.data) {\n                console.log(\"res.data \",res.data.data);\n                setLocationsLoading(false);\n                setLocations(res.data.data);\n            }\n        } catch (error) {\n            console.error(\"error \", error);\n            setLocationsLoading(false);\n        }\n    }\n\n    const handleChangeLocation = (e) => {\n        e.persist();\n        let selectedLocationName = e.target.value;\n        setFormData(formData => ({ ...formData, location: selectedLocationName }));\n        let locationsList = locations;\n        /*let newDialCode = Object.keys(locationsList).filter((x) => {\n            return locationsList[x].location_name === selectedCountryName;\n        }).map((x) => {\n            return locationsList[x].dial_code;\n        });*/        \n    }\n\n    async function fetchCountries() {\n        setCountriesLoading(true);\n        try {\n            const res = await axios.get(publicPath + \"/assets/data/countries.json\");\n            if (res.data) {\n                //console.log(\"res.data \",res.data.data);\n                setCountriesLoading(false);\n                setCountries(res.data.data);\n            }\n        } catch (error) {\n            console.error(\"error \", error);\n            setCountriesLoading(false);\n        }\n    }\n\n    const handleChangeCountry = (e) => {\n        e.persist();\n        let selectedCountryName = e.target.value;\n        setFormData(formData => ({ ...formData, country: selectedCountryName }));\n        let countriesList = countries;\n        let newDialCode = Object.keys(countriesList).filter((x) => {\n            return countriesList[x].country_name === selectedCountryName;\n        }).map((x) => {\n            return countriesList[x].dial_code;\n        });\n        let dial_code = newDialCode.length ? newDialCode[0] : '';        \n        setFormData(formData => ({ ...formData, dial_code: dial_code }));        \n    }\n\n    const handleChangeTerms = (status) => {\n        console.log(\"terms \",status);\n        setFormData(formData => ({ ...formData, terms: status }));\n    }  \n\n    const genRandomString = () => {\n        var text = \"\";\n        var length = 6;\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        setSecurityCode(text);\n        return text;\n    }\n\n    const resetFrom = () => {\n        setFormData({ first_name: null, last_name: null, email: null, country: null, mobile: null, appointment_date: null, appointment_time: null,location: null });\n\n        document.getElementById(\"form1\").reset();\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"formData \", formData);        \n        if (formData.country === null) {\n            alert(\"Please select country name.\");\n            return false;\n        }        \n        if (formData.mobile === null) {\n            alert(\"Please enter mobile number.\");\n            return false;\n        }\n        if (formData.appointment_date === null) {\n            alert(\"Please select appointment date.\");\n            return false;\n        }\n        if (formData.appointment_time === null) {\n            alert(\"Please select appointment time.\");\n            return false;\n        }\n        if (formData.location === null) {\n            alert(\"Please select Location name.\");\n            return false;\n        }\n        \n        setLoading(true);\n\n        axios.post(API_ENDPOINT + 'orgzit/create_appointment', formData, { headers: { Authorization: authHeader() } })\n            .then((res) => {\n                console.log('res ### ', res.status, res.data)\n                if (res.status === 200) {\n                    setLoading(false);\n                    genRandomString();\n                    resetFrom();\n                    setTimeout(() => {\n                        alert(res.data.message);\n                        window.location.reload();\n                    }, 1000);\n\n\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error);\n                if (error) {\n                    //if (error.response.status === 422) {\n                        let errors = error.response.data.errors;\n                        let msg = error.response.data.message + \"\\n\";\n\n                        Object.keys(errors).map((error, index) => (\n                            console.log(error)\n                            \n                            //msg += errors[error][0] + \"\\n\"\n                        ));\n\n                        alert(msg);\n                    //}\n                }\n\n            })\n    }\n\n\n    return (\n        <>\n            <Modal {...props} className=\"enrollmentModal\" backdrop=\"static\" keyboard={false} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"p-3 enrollmentModal\">\n                    <div className=\"row align-items-center\">                        \n                        <div className=\"col-md-12\">\n                            <div className=\"enrollmentContent\">\n                                \n                                <h4>Create Appointment</h4>\n\n                                <form id=\"form1\" onSubmit={onSubmit}>\n\n                                    <div className=\"row\">\n                                        <div className=\"col mb-3\">\n                                            <input value={auth().user.name} className=\"form-control\" type=\"text\" placeholder=\"Full Name\" name=\"first_name\" defaultValue={formData.first_name} onChange={(e) => setFormData({ ...formData, first_name: e.target.value })} />\n                                        </div>                                        \n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col mb-3\">\n                                            <input value={auth().user.email} className=\"form-control\" type=\"text\" placeholder=\"Email Address\" name=\"email\" defaultValue={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col mb-3\">\n                                            {countries.length > 0 ?\n                                                <>\n                                                    <select className=\"form-select\" placeholder=\"Country\" name=\"country\" onChange={handleChangeCountry} defaultValue={formData.country_name}>\n                                                        <option value=\"\">Select Country</option>\n                                                        {countries.length > 0 && countries.map((row, index) => <option value={row.country_name} key={index} >{row.country_name}</option>)}\n                                                    </select>\n                                                </>\n                                                : null}\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col mb-3\">\n                                            <div className=\"input-group\">\n                                                <span className=\"input-group-text\" id=\"basic-addon1\">{formData.dial_code ? formData.dial_code : '+91'}</span>\n                                                <input className=\"form-control\" type=\"text\" placeholder=\"Mobile No.\"\n                                                    name=\"mobile\" defaultValue={formData.mobile} onChange={(e) => setFormData({ ...formData, mobile: e.target.value })} />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    \n                                    <div className=\"row\">\n                                        <div className=\"col mb-3\">\n                                            <label className='mb-1'>Appointment Date</label>\n                                            <input className=\"form-control\" type=\"date\" placeholder=\"Appointment Date\" name=\"appointment_date\" defaultValue={formData.appointment_date} onChange={(e) => setFormData({ ...formData, appointment_date: e.target.value })} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col mb-3\">\n                                            <label className='mb-1'>Appointment Time</label>\n                                            <input className=\"form-control\" type=\"time\" placeholder=\"Appointment Time\" name=\"appointment_time\" defaultValue={formData.appointment_time} onChange={(e) => setFormData({ ...formData, appointment_time: e.target.value })} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col mb-3\">\n                                            {locations.length > 0 ?\n                                                <>\n                                                    <select className=\"form-select\" placeholder=\"Location\" name=\"location\" onChange={handleChangeLocation} defaultValue={formData.location_name}>\n                                                        <option value=\"\">Select Location</option>\n                                                        {locations.length > 0 && locations.map((row, index) => <option value={row.OrgzitRecordId} key={index} >{row.ProjectName}</option>)}\n                                                    </select>\n                                                </>\n                                                : null}\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col\">                                            \n                                            {loading ?\n                                                <button className=\"btntheme\" type=\"button\" disabled >\n                                                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                                                </button>\n                                                :\n                                                <button className=\"btntheme\" type=\"submit\">Submit</button>\n                                            }\n\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default CreateAppointment;"]},"metadata":{},"sourceType":"module"}