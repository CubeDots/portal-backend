{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/pages/dash/InvitationsDashPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuthHeader } from 'react-auth-kit';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InvitationsDashPage() {\n  _s();\n\n  const authHeader = useAuthHeader();\n  const [invitationsLoader, setInvitationsLoader] = useState(false);\n  const [invitations, setInvitations] = useState([]);\n  const [page, setPage] = useState(1);\n  const countPerPage = 3;\n  useEffect(() => {\n    fetchInvitationData();\n  }, []);\n\n  async function fetchInvitationData() {\n    setInvitationsLoader(true);\n    let postData = {\n      test: null,\n      start_date: '2022-02-01T00:00:00.000Z',\n      end_date: '2022-02-28T00:00:00.000Z'\n    };\n\n    try {\n      const res = await axios.post(API_ENDPOINT + \"orgzit/payplans\", postData, {\n        headers: {\n          Authorization: authHeader()\n        }\n      });\n      setInvitationsLoader(false);\n      setInvitations(res.data.data);\n    } catch (error) {\n      console.error(\"error \", error);\n      setInvitationsLoader(false);\n    }\n  }\n\n  const columns = React.useMemo(() => [{\n    Header: \"Invitations Listing\",\n    Footer: \"Footer 1\",\n    columns: [{\n      Header: \"id\",\n      accessor: \"id\"\n    }, {\n      Header: \"SalesPerson\",\n      accessor: \"SalesPerson\"\n    }, {\n      Header: \"ProjectName\",\n      accessor: \"ProjectName\"\n    }, {\n      Header: \"PaymentType\",\n      accessor: \"PaymentType\"\n    }, {\n      Header: \"PaymentStatus\",\n      accessor: \"PaymentStatus\"\n    }, {\n      Header: \"PaymentCurrency\",\n      accessor: \"PaymentCurrency\"\n    }, {\n      Header: \"ExpectedPaymentDate\",\n      accessor: \"ExpectedPaymentDate\"\n    }, {\n      Header: \"ExpectedPaymentAmount\",\n      accessor: \"ExpectedPaymentAmount\"\n    }]\n  }], []);\n  console.log(\"invitations \", invitations);\n  const data = React.useMemo(() => invitations, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Employees\",\n    columns: columns,\n    data: invitations,\n    highlightOnHover: true,\n    pagination: true,\n    paginationServer: true,\n    paginationTotalRows: invitations.length,\n    paginationPerPage: countPerPage,\n    paginationComponentOptions: {\n      noRowsPerPage: true\n    },\n    onChangePage: page => setPage(page)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}\n\n_s(InvitationsDashPage, \"QGWRkWgRNw1iwSux+cxsJqkgNlA=\", false, function () {\n  return [useAuthHeader];\n});\n\n_c = InvitationsDashPage;\nexport default InvitationsDashPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvitationsDashPage\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/pages/dash/InvitationsDashPage.js"],"names":["React","useEffect","useState","axios","useAuthHeader","API_ENDPOINT","DataTable","InvitationsDashPage","authHeader","invitationsLoader","setInvitationsLoader","invitations","setInvitations","page","setPage","countPerPage","fetchInvitationData","postData","test","start_date","end_date","res","post","headers","Authorization","data","error","console","columns","useMemo","Header","Footer","accessor","log","length","noRowsPerPage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuthHeader } from 'react-auth-kit';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport DataTable from 'react-data-table-component';\n\n\nfunction InvitationsDashPage() {\n\n  const authHeader = useAuthHeader();\n  const [invitationsLoader, setInvitationsLoader] = useState(false);\n  const [invitations, setInvitations] = useState([]);\n  const [page, setPage] = useState(1);\n  const countPerPage = 3;\n\n  useEffect(() => {\n    fetchInvitationData();\n  }, []);\n\n  async function fetchInvitationData() {\n    setInvitationsLoader(true);\n    let postData = {\n      test: null,\n      start_date: '2022-02-01T00:00:00.000Z',\n      end_date: '2022-02-28T00:00:00.000Z'\n    };\n\n    try {\n      const res = await axios.post(API_ENDPOINT + \"orgzit/payplans\", postData, { headers: { Authorization: authHeader() } });\n      setInvitationsLoader(false);\n      setInvitations(res.data.data);\n\n    } catch (error) {\n      console.error(\"error \", error);\n      setInvitationsLoader(false);\n    }\n  }\n\n  const columns = React.useMemo(() => [\n    {\n      Header: \"Invitations Listing\",\n      Footer: \"Footer 1\",\n      columns: [\n        { Header: \"id\", accessor: \"id\" },\n        { Header: \"SalesPerson\", accessor: \"SalesPerson\" },\n        { Header: \"ProjectName\", accessor: \"ProjectName\" },\n        { Header: \"PaymentType\", accessor: \"PaymentType\" },\n        { Header: \"PaymentStatus\", accessor: \"PaymentStatus\" },\n        { Header: \"PaymentCurrency\", accessor: \"PaymentCurrency\" },\n        { Header: \"ExpectedPaymentDate\", accessor: \"ExpectedPaymentDate\" },\n        { Header: \"ExpectedPaymentAmount\", accessor: \"ExpectedPaymentAmount\" },\n      ]\n    }\n  ], []);\n\n  console.log(\"invitations \",invitations);\n  const data = React.useMemo(() => invitations, []);\n  return <DataTable\n        title=\"Employees\"\n        columns={columns}\n        data={invitations}\n        highlightOnHover\n        pagination\n        paginationServer\n        paginationTotalRows={invitations.length}\n        paginationPerPage={countPerPage}\n        paginationComponentOptions={{\n          noRowsPerPage: true\n        }}\n        onChangePage={page => setPage(page)}\n      />;\n}\n\nexport default InvitationsDashPage;"]},"metadata":{},"sourceType":"module"}