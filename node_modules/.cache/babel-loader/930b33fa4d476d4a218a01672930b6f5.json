{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/home/EventComponent.js\",\n    _s = $RefreshSig$();\n\nimport Carousel from \"react-multi-carousel\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EventComponent(props) {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const [eventsLoading, setEventsLoading] = useState(false);\n  const [events, setEvents] = useState([]);\n\n  async function fetchEvents() {\n    setEventsLoading(true);\n\n    try {\n      const res = await axios.get(publicPath + \"/assets/data/events.json\");\n\n      if (res.data) {\n        setEventsLoading(false);\n        setEvents(res.data);\n      }\n    } catch (error) {\n      console.error(\"error \", error);\n      setEventsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchEvents();\n  }, []);\n  if (eventsLoading) return \"Please wait...\";\n  const responsive = {\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 2,\n      paritialVisibilityGutter: 60\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2,\n      paritialVisibilityGutter: 50\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1,\n      paritialVisibilityGutter: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Carousel, {\n      ssr: true,\n      partialVisbile: true,\n      itemClass: \"image-item\",\n      responsive: responsive,\n      autoPlay: props.deviceType !== \"mobile\" ? true : false,\n      children: events && events.map((image, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eventContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n            draggable: false,\n            style: {\n              width: \"100%\"\n            },\n            src: image.link,\n            title: \"YouTube video player\",\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(EventComponent, \"s/kYEFyMsBnBDliQjIAweSN5E+0=\");\n\n_c = EventComponent;\nexport default EventComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventComponent\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/home/EventComponent.js"],"names":["Carousel","React","useEffect","useState","axios","EventComponent","props","publicPath","process","env","PUBLIC_URL","eventsLoading","setEventsLoading","events","setEvents","fetchEvents","res","get","data","error","console","window","scrollTo","responsive","desktop","breakpoint","max","min","items","paritialVisibilityGutter","tablet","mobile","deviceType","map","image","index","width","link","title"],"mappings":"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","sourcesContent":["import Carousel from \"react-multi-carousel\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\n\nfunction EventComponent(props) {\n    let publicPath = process.env.PUBLIC_URL;\n    const [eventsLoading, setEventsLoading] = useState(false);\n    const [events, setEvents] = useState([]);\n\n    async function fetchEvents() {\n        setEventsLoading(true);\n        try {\n            const res = await axios.get(publicPath + \"/assets/data/events.json\");\n            if (res.data) {\n                setEventsLoading(false);\n                setEvents(res.data);\n            }\n        } catch (error) {\n            console.error(\"error \", error);\n            setEventsLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        fetchEvents();\n    }, []);\n    if (eventsLoading)\n    return (\"Please wait...\");\n    \n    const responsive = {\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 2,\n            paritialVisibilityGutter: 60\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2,\n            paritialVisibilityGutter: 50\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1,\n            paritialVisibilityGutter: 0\n        }\n    };\n    return (\n        <>\n            <Carousel\n                ssr\n                partialVisbile\n                itemClass=\"image-item\"\n                responsive={responsive}\n                autoPlay={props.deviceType !== \"mobile\" ? true : false}>\n                {events && events.map((image, index) => {\n                    return (\n                        <div key={index} className=\"eventContent\">\n                            <iframe draggable={false} style={{ width: \"100%\" }} src={image.link} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                            <p>{image.title}</p>\n                        </div>\n                    );\n                })}\n            </Carousel>\n        </>\n\n    )\n}\nexport default EventComponent;"]},"metadata":{},"sourceType":"module"}