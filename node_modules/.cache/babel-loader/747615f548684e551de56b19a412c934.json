{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/pages/dash/MeetingListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MeetingListPage() {\n  _s();\n\n  const authHeader = useAuthHeader();\n  const [meetingLoader, setMeetingsLoader] = useState(false);\n  const [meetings, setMeetings] = useState([]);\n  const [page, setPage] = useState(1);\n  const countPerPage = 3;\n  useEffect(() => {\n    fetchMeetingData();\n  }, [page]);\n\n  async function fetchMeetingData() {\n    setMeetingsLoader(true);\n    let postData = {\n      test: null,\n      start_date: '2022-02-01T00:00:00.000Z',\n      end_date: '2022-02-28T00:00:00.000Z'\n    };\n\n    try {\n      const res = await axios.post(API_ENDPOINT + \"orgzit/meeting\", postData, {\n        headers: {\n          Authorization: authHeader()\n        }\n      });\n      setMeetingsLoader(false);\n      setMeetings(res.data.data);\n    } catch (error) {\n      console.error(\"error \", error);\n      setMeetingsLoader(false);\n    }\n  }\n\n  const columns = React.useMemo(() => [{\n    name: \"id\",\n    selector: \"id\",\n    sortable: true\n  }, {\n    name: \"createdDate\",\n    selector: \"createdDate\",\n    sortable: true\n  }, {\n    name: \"createdTime\",\n    selector: \"createdTime\",\n    sortable: true\n  }, {\n    name: \"MeetingWithCustomer\",\n    selector: \"MeetingWithCustomer\",\n    sortable: true\n  }, {\n    name: \"MeetingLocation\",\n    selector: \"MeetingLocation\",\n    sortable: true\n  }, {\n    name: \"MeetingType\",\n    selector: \"MeetingType\",\n    sortable: true\n  }, {\n    name: \"MeetingTitle\",\n    selector: \"MeetingTitle\",\n    sortable: true\n  }], []);\n  console.log(\"meetings =>  \", countPerPage, meetings.length, meetings);\n  const data = React.useMemo(() => meetings, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Meetings\",\n    columns: columns,\n    data: invitations,\n    highlightOnHover: true,\n    pagination: true,\n    paginationServer: true,\n    paginationTotalRows: meetings.length,\n    paginationPerPage: countPerPage,\n    paginationComponentOptions: {\n      noRowsPerPage: true\n    },\n    onChangePage: page => setPage(1)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MeetingListPage, \"4BOq3YvWTA8XTWMWKk0sydtsbvg=\", false, function () {\n  return [useAuthHeader];\n});\n\n_c = MeetingListPage;\nexport default MeetingListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingListPage\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/pages/dash/MeetingListPage.js"],"names":["React","useState","useEffect","DataTable","API_ENDPOINT","useAuthHeader","axios","MeetingListPage","authHeader","meetingLoader","setMeetingsLoader","meetings","setMeetings","page","setPage","countPerPage","fetchMeetingData","postData","test","start_date","end_date","res","post","headers","Authorization","data","error","console","columns","useMemo","name","selector","sortable","log","length","invitations","noRowsPerPage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\n\n\nfunction MeetingListPage() {\n\n  const authHeader = useAuthHeader();\n  const [meetingLoader, setMeetingsLoader] = useState(false);\n  const [meetings, setMeetings] = useState([]);\n  const [page, setPage] = useState(1);\n  const countPerPage = 3;\n\n  useEffect(() => {\n    fetchMeetingData();\n  }, [page]);\n\n  \n  async function fetchMeetingData() {\n    setMeetingsLoader(true);\n    let postData = {\n      test: null,\n      start_date: '2022-02-01T00:00:00.000Z',\n      end_date: '2022-02-28T00:00:00.000Z'\n    };\n\n    try {\n      const res = await axios.post(API_ENDPOINT + \"orgzit/meeting\", postData, { headers: { Authorization: authHeader() } });\n      setMeetingsLoader(false);\n      setMeetings(res.data.data);\n    } catch (error) {\n      console.error(\"error \", error);\n      setMeetingsLoader(false);\n    }\n\n  }\n\n  const columns = React.useMemo(() => [\n        { name: \"id\", selector: \"id\", sortable: true },\n        { name: \"createdDate\", selector: \"createdDate\", sortable: true },\n        { name: \"createdTime\", selector: \"createdTime\", sortable: true },\n        { name: \"MeetingWithCustomer\", selector: \"MeetingWithCustomer\", sortable: true },\n        { name: \"MeetingLocation\", selector: \"MeetingLocation\", sortable: true },\n        { name: \"MeetingType\", selector: \"MeetingType\", sortable: true },\n        { name: \"MeetingTitle\", selector: \"MeetingTitle\", sortable: true }\n    \n  ], []);\n\n  console.log(\"meetings =>  \",countPerPage, meetings.length,meetings);\n\n  const data = React.useMemo(() => meetings, []);\n  return <DataTable\n        title=\"Meetings\"\n        columns={columns}\n        data={invitations}\n        highlightOnHover\n        pagination\n        paginationServer\n        paginationTotalRows={meetings.length}\n        paginationPerPage={countPerPage}\n        paginationComponentOptions={{\n          noRowsPerPage: true\n        }}\n        onChangePage={page => setPage(1)}\n      />;\n}\n\nexport default MeetingListPage;"]},"metadata":{},"sourceType":"module"}