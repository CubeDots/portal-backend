{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginModal(props) {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const isAuthenticated = useIsAuthenticated();\n  const navigate = useNavigate();\n  const signIn = useSignIn();\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const [loading, setLoading] = React.useState(false);\n  const [formData, setFormData] = React.useState({\n    email: '',\n    password: ''\n  });\n  const [formErrors, setFormErrors] = React.useState('');\n  const [formValidationErrors, setFormValidationErrors] = React.useState({}); // if (isAuthenticated()) {\n  //     // Redirect to dashboard\n  //     console.log(\"valid Redirect to dashboard\");\n  //     return (\n  //         <Navigate to=\"/dash\" replace />\n  //     );\n  // }\n\n  useEffect(() => {\n    if (props.isLoginModalShow) {\n      handleShow();\n    }\n\n    if (!show) {\n      props.handleChane();\n    }\n  }, [props, show]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    axios.post('http://staging.cuengine.com/api/v7/auth', formData).then(res => {\n      console.log('login res', res.status, res.data);\n\n      if (res.status === 200) {\n        if (signIn({\n          token: res.data.data.token,\n          expiresIn: res.data.data.expires_at,\n          tokenType: \"Bearer\",\n          authState: {\n            user: res.data.data.user\n          } //    refreshToken: res.data.refreshToken, // Only if you are using refreshToken feature\n          //    refreshTokenExpireIn: res.data.refreshTokenExpireIn\n\n        })) {\n          // Only if you are using refreshToken feature\n          // Redirect or do-something\n          navigate(\"/dash\");\n        } else {//Throw error\n          //alert(\"Errors \\n\"+res.errors[0])\n        }\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error.response);\n\n      if (error.response.status === 422) {\n        console.log(\"errors data \", error.response.data.errors); //let errorm = error.response.data.errors[0];\n\n        console.log(\"error \\n\", error.response.data.message);\n        setFormValidationErrors(error.response.data.errors);\n        setFormErrors(error.response.data.message);\n        setTimeout(() => {\n          setFormValidationErrors({});\n          setFormErrors('');\n        }, 5000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      className: \"SignIn\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signinImg\",\n          children: /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n            effect: \"blur\",\n            src: publicPath + \"/assets/images/2.webp\",\n            className: \"img-fluid\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SignInFrom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lorem ipsum dolor sit amet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: formValidationErrors && Object.keys(formValidationErrors).map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"text-danger\",\n                  children: formValidationErrors[error][0]\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                name: \"email\",\n                placeholder: \"Email Address\",\n                onChange: e => setFormData({ ...formData,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"password\",\n                placeholder: \"Password\",\n                onChange: e => setFormData({ ...formData,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                children: \"Forgot your password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"button\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 45\n              }, this), \"  Submitting...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginModal, \"bMUvuBcevUb6ZlfhL+CVdBj29r0=\", false, function () {\n  return [useIsAuthenticated, useNavigate, useSignIn];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/LoginModal.js"],"names":["React","useEffect","useNavigate","Navigate","axios","Spinner","useSignIn","useIsAuthenticated","Modal","LazyLoadImage","LoginModal","props","publicPath","process","env","PUBLIC_URL","isAuthenticated","navigate","signIn","show","setShow","useState","handleClose","handleShow","loading","setLoading","formData","setFormData","email","password","formErrors","setFormErrors","formValidationErrors","setFormValidationErrors","isLoginModalShow","handleChane","onSubmit","e","preventDefault","post","then","res","console","log","status","data","token","expiresIn","expires_at","tokenType","authState","user","catch","error","response","errors","message","setTimeout","Object","keys","map","index","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { useNavigate, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nfunction LoginModal(props) {\n    let publicPath = process.env.PUBLIC_URL;\n\n    const isAuthenticated = useIsAuthenticated();\n    const navigate = useNavigate();\n    const signIn = useSignIn();\n\n\n    const [show, setShow] = React.useState(false);\n\n    const handleClose = () =>{ setShow(false);}\n    const handleShow = () => setShow(true);\n  \n\n    const [loading, setLoading] = React.useState(false);\n    const [formData, setFormData] = React.useState({ email: '', password: '' });\n    const [formErrors, setFormErrors] = React.useState('');\n    const [formValidationErrors, setFormValidationErrors] = React.useState({});\n\n    // if (isAuthenticated()) {\n    //     // Redirect to dashboard\n    //     console.log(\"valid Redirect to dashboard\");\n    //     return (\n    //         <Navigate to=\"/dash\" replace />\n    //     );\n    // }\n    useEffect(() => {\n        if(props.isLoginModalShow){\n            handleShow();\n        }\n        if(!show){\n            props.handleChane();\n        }\n    }, [props,show])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setLoading(true);\n        axios.post('http://staging.cuengine.com/api/v7/auth', formData)\n            .then((res) => {\n                console.log('login res', res.status, res.data)\n                if (res.status === 200) {\n                    if (signIn({\n                        token: res.data.data.token,\n                        expiresIn: res.data.data.expires_at,\n                        tokenType: \"Bearer\",\n                        authState: { user: res.data.data.user },\n                        //    refreshToken: res.data.refreshToken, // Only if you are using refreshToken feature\n                        //    refreshTokenExpireIn: res.data.refreshTokenExpireIn\n                    })) { // Only if you are using refreshToken feature\n                        // Redirect or do-something\n                        navigate(\"/dash\");\n                    } else {\n                        //Throw error\n                        //alert(\"Errors \\n\"+res.errors[0])\n\n                    }\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error.response);\n                if (error.response.status === 422) {\n                    console.log(\"errors data \", error.response.data.errors);\n                    //let errorm = error.response.data.errors[0];\n                    console.log(\"error \\n\", error.response.data.message)\n                    setFormValidationErrors(error.response.data.errors);\n                    setFormErrors(error.response.data.message);\n                    setTimeout(() => {\n                        setFormValidationErrors({});\n                        setFormErrors('');\n                    }, 5000);\n                }\n            })\n    }\n\n\n    return (\n        <>\n        <Modal show={show} onHide={handleClose} className=\"SignIn\" centered>\n\n            {/* <div className=\"modal fade SignIn\" id=\"SignIn\" tabIndex=\"-1\" aria-labelledby=\"SignInLabel\" aria-hidden=\"true\"> */}\n                {/* <div className=\"modal-dialog modal-dialog-centered\">\n                    <div className=\"modal-content\"> */}\n                    <Modal.Header closeButton>\n                    </Modal.Header>\n                        <div className=\"modal-body\">\n                            <div className='signinImg'>\n                                <LazyLoadImage \n                                effect=\"blur\" \n                                src={publicPath + \"/assets/images/2.webp\"} \n                                className=\"img-fluid\" \n                                alt=\"\" />\n                                {/* <img src={publicPath + \"/assets/images/2.webp\"} className='img-fluid' alt='' /> */}\n                            </div>\n                            <div className='SignInFrom'>\n                                <h2>Sign in</h2>\n                                <p>Lorem ipsum dolor sit amet</p>\n                                <form onSubmit={onSubmit}>\n                                    <div className=\"mb-3\">\n                                        {/* {loading ? 'loading...' : ''} */}\n                                        {/* {formErrors} */}\n                                        <ul className=\"list-unstyled\">\n                                            {formValidationErrors && Object.keys(formValidationErrors).map((error, index) => (\n                                                <li className=\"text-danger\" key={index}>{formValidationErrors[error][0]}</li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                    <div className=\"mb-3\">\n                                        <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email Address\" onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n                                    </div>\n                                    <div className=\"mb-3\">\n                                        <input type=\"password\" className=\"form-control\" name=\"password\" placeholder='Password' onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n                                    </div>\n                                    <div className=\"mb-3\">\n                                        <label className=\"form-check-label\">Forgot your password?</label>\n                                    </div>\n\n                                    {loading ?\n                                        <button className=\"btn btn-primary\" type=\"button\" disabled >\n                                            <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                                        </button>\n                                        :\n                                        <button className=\"btn btn-primary\" type=\"submit\">Login</button>\n                                    }\n\n\n                                    {/* <button type=\"submit\" className=\"btn btn-primary\">Sign in</button> */}\n                                </form>\n                            </div>\n                        </div>\n                    {/* </div>\n                </div> */}\n            {/* </div> */}\n            </Modal>\n        </>\n    );\n}\n\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}