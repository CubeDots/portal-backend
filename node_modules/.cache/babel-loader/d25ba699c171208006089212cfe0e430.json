{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/PopoverButton.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { useIsAuthenticated } from 'react-auth-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatingPopover = /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    popper,\n    children,\n    show: _,\n    ...props\n  } = _ref;\n  useEffect(() => {\n    console.log('updating!');\n    popper.scheduleUpdate();\n  }, [children, popper]);\n  return /*#__PURE__*/_jsxDEV(Popover, {\n    ref: ref,\n    body: true,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n_c2 = UpdatingPopover;\n\nfunction PopoverButton(props) {\n  _s2();\n\n  const {\n    to\n  } = props;\n  const navigate = useNavigate();\n  const isAuthenticated = useIsAuthenticated();\n  const content = \"Unauthenticated\";\n\n  const redirectPage = () => {\n    console.log(\" redirectPage clicked\");\n\n    if (isAuthenticated()) {\n      return navigate(to); //   return (\n      //     <Navigate to={to} />\n      //   );\n    }\n  }; // const [content, setContent] = useState(shortContent);\n  // useEffect(() => {\n  //     console.log(\"PopoverButton props \",props);\n  //   const timerId = setInterval(() => {\n  //     setContent(content === shortContent ? longContent : shortContent);\n  //   }, 3000);\n  //   return () => clearInterval(timerId);\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    trigger: \"click\",\n    overlay: /*#__PURE__*/_jsxDEV(UpdatingPopover, {\n      id: \"popover-contained\",\n      children: \"Login required.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btntheme\",\n      onClick: redirectPage,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(PopoverButton, \"1wCUg/Oxntkyh1hGQ0+mBpPDQw8=\", false, function () {\n  return [useNavigate, useIsAuthenticated];\n});\n\n_c3 = PopoverButton;\nexport default PopoverButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UpdatingPopover$React.forwardRef\");\n$RefreshReg$(_c2, \"UpdatingPopover\");\n$RefreshReg$(_c3, \"PopoverButton\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/PopoverButton.js"],"names":["React","useState","useEffect","Popover","Navigate","useNavigate","OverlayTrigger","useIsAuthenticated","UpdatingPopover","forwardRef","ref","popper","children","show","_","props","console","log","scheduleUpdate","PopoverButton","to","navigate","isAuthenticated","content","redirectPage"],"mappings":";;;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AAEA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;AAEA,MAAMC,eAAe,gBAAGR,KAAK,CAACS,UAAN,SACpB,OAA0CC,GAA1C,KAAkD;AAAA;;AAAA,MAAjD;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,IAAI,EAAEC,CAA1B;AAA6B,OAAGC;AAAhC,GAAiD;AAChDb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAN,IAAAA,MAAM,CAACO,cAAP;AACD,GAHQ,EAGN,CAACN,QAAD,EAAWD,MAAX,CAHM,CAAT;AAKA,sBACE,QAAC,OAAD;AAAS,IAAA,GAAG,EAAED,GAAd;AAAmB,IAAA,IAAI,MAAvB;AAAA,OAA4BK,KAA5B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZmB,kCAAxB;MAAMJ,e;;AAgBJ,SAASW,aAAT,CAAuBJ,KAAvB,EAA8B;AAAA;;AAC5B,QAAM;AAAEK,IAAAA;AAAF,MAASL,KAAf;AACA,QAAMM,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,eAAe,GAAGf,kBAAkB,EAA1C;AACA,QAAMgB,OAAO,GAAG,iBAAhB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACvBR,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,QAAIK,eAAe,EAAnB,EAAuB;AACvB,aAAOD,QAAQ,CAACD,EAAD,CAAf,CADuB,CAEvB;AACA;AACA;AACC;AACJ,GARD,CAN4B,CAgB5B;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,sBACE,QAAC,cAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,OAAO,eACL,QAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,2BAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAA2C,MAAA,OAAO,EAAEI,YAApD;AAAA,gBAAmET,KAAK,CAACH;AAAzE;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IArCQO,a;UAEUd,W,EACOE,kB;;;MAHjBY,a;AAuCT,eAAeA,aAAf","sourcesContent":["\nimport React,{ useState, useEffect } from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { useIsAuthenticated } from 'react-auth-kit';\n\nconst UpdatingPopover = React.forwardRef(\n    ({ popper, children, show: _, ...props }, ref) => {\n      useEffect(() => {\n        console.log('updating!');\n        popper.scheduleUpdate();\n      }, [children, popper]);\n  \n      return (\n        <Popover ref={ref} body {...props}>\n          {children}\n        </Popover>\n      );\n    },\n  );\n  \n  \n  function PopoverButton(props) {\n    const { to } = props;\n    const navigate = useNavigate();\n    const isAuthenticated = useIsAuthenticated();\n    const content = \"Unauthenticated\";\n    \n    const redirectPage = () => {\n        console.log(\" redirectPage clicked\");\n        if (isAuthenticated()) {\n        return navigate(to);\n        //   return (\n        //     <Navigate to={to} />\n        //   );\n        }\n    }\n\n    // const [content, setContent] = useState(shortContent);\n  \n    // useEffect(() => {\n    //     console.log(\"PopoverButton props \",props);\n    //   const timerId = setInterval(() => {\n    //     setContent(content === shortContent ? longContent : shortContent);\n    //   }, 3000);\n  \n    //   return () => clearInterval(timerId);\n    // });\n  \n    return (\n      <OverlayTrigger\n        trigger=\"click\"\n        overlay={\n          <UpdatingPopover id=\"popover-contained\">Login required.</UpdatingPopover>\n        }\n      >\n        <button type=\"button\" className=\"btntheme\" onClick={redirectPage}>{props.children}</button>\n      </OverlayTrigger>\n    );\n  }\n \n  export default PopoverButton;"]},"metadata":{},"sourceType":"module"}