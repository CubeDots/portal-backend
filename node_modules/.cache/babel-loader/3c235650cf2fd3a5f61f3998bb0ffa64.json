{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/ForgotPasswordModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from \"react-auth-kit\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { API_ENDPOINT } from \"../common/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPasswordModal(props) {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const isAuthenticated = useIsAuthenticated();\n  const navigate = useNavigate();\n\n  const handleClose = () => {\n    setShowfp(false); // props.handleChanel();\n\n    console.log(\"handleClose clicked \", showfp);\n  };\n\n  const handleShow = () => {\n    setShowfp(true);\n    console.log(\"handleShow clicked \", showfp);\n  };\n\n  const [showfp, setShowfp] = React.useState(true);\n  const [loading, setLoading] = React.useState(false);\n  const [formData, setFormData] = React.useState({\n    email: ''\n  });\n  const [formErrors, setFormErrors] = React.useState('');\n  const [formValidationErrors, setFormValidationErrors] = React.useState({});\n  useEffect(() => {\n    handleShow();\n\n    if (!showfp) {\n      props.handleChanel();\n    }\n  }, [props, showfp]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    axios.post(API_ENDPOINT + \"auth/forgetPassword\", formData).then(res => {\n      setLoading(false);\n      console.log('forgetPassword res', res.status, res.data);\n\n      if (res.status === 200) {\n        setFormErrors(res.data.message);\n        setFormData(fd => ({ ...fd,\n          email: ''\n        }));\n        setTimeout(() => {\n          setFormErrors('');\n          navigate(\"/\");\n        }, 5000);\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error.response);\n\n      if (error.response.status === 422) {\n        console.log(\"errors data \", error.response.data.errors); //let errorm = error.response.data.errors[0];\n\n        console.log(\"error \\n\", error.response.data.message);\n        setFormValidationErrors(error.response.data.errors);\n        setFormErrors(error.response.data.message);\n        setTimeout(() => {\n          setFormValidationErrors({});\n          setFormErrors('');\n        }, 5000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      onHide: handleClose,\n      className: \"forgot-password\",\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgotpasswordForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [formErrors ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: formValidationErrors.length ? 'text-danger' : 'text-success',\n                children: formErrors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: formValidationErrors && Object.keys(formValidationErrors).map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"text-danger\",\n                  children: formValidationErrors[error][0]\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                name: \"email\",\n                placeholder: \"Email Address\",\n                value: formData.email,\n                onChange: e => setFormData({ ...formData,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"button\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), \"  Submitting...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ForgotPasswordModal, \"0UG9/cM3GranMsFAiJ6PSNsN1+c=\", false, function () {\n  return [useIsAuthenticated, useNavigate];\n});\n\n_c = ForgotPasswordModal;\nexport default ForgotPasswordModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordModal\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/ForgotPasswordModal.js"],"names":["React","useEffect","useNavigate","axios","Spinner","useSignIn","useIsAuthenticated","Modal","API_ENDPOINT","ForgotPasswordModal","props","publicPath","process","env","PUBLIC_URL","isAuthenticated","navigate","handleClose","setShowfp","console","log","showfp","handleShow","useState","loading","setLoading","formData","setFormData","email","formErrors","setFormErrors","formValidationErrors","setFormValidationErrors","handleChanel","onSubmit","e","preventDefault","post","then","res","status","data","message","fd","setTimeout","catch","error","response","errors","length","Object","keys","map","index","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from \"react-auth-kit\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { API_ENDPOINT } from \"../common/Constants\";\n\nfunction ForgotPasswordModal(props) {\n    let publicPath = process.env.PUBLIC_URL;\n\n    const isAuthenticated = useIsAuthenticated();\n    const navigate = useNavigate();\n\n    const handleClose = () => {\n        setShowfp(false);\n        // props.handleChanel();\n        console.log(\"handleClose clicked \", showfp);\n    }\n    const handleShow = () => {\n        setShowfp(true);\n        console.log(\"handleShow clicked \", showfp);\n    }\n    const [showfp, setShowfp] = React.useState(true);\n\n    const [loading, setLoading] = React.useState(false);\n    const [formData, setFormData] = React.useState({ email: '' });\n    const [formErrors, setFormErrors] = React.useState('');\n    const [formValidationErrors, setFormValidationErrors] = React.useState({});\n\n    useEffect(() => {\n        handleShow();\n\n        if (!showfp) {\n            props.handleChanel();\n        }\n    }, [props, showfp]);\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setLoading(true);\n        axios.post(API_ENDPOINT + \"auth/forgetPassword\", formData)\n            .then((res) => {\n                setLoading(false);\n                console.log('forgetPassword res', res.status, res.data)\n                if (res.status === 200) {\n                    setFormErrors(res.data.message);\n                    setFormData(fd => ({ ...fd, email: '' }));\n                    setTimeout(() => {\n                        setFormErrors('');\n                        navigate(\"/\");\n                    }, 5000);\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error.response);\n                if (error.response.status === 422) {\n                    console.log(\"errors data \", error.response.data.errors);\n                    //let errorm = error.response.data.errors[0];\n                    console.log(\"error \\n\", error.response.data.message)\n                    setFormValidationErrors(error.response.data.errors);\n                    setFormErrors(error.response.data.message);\n                    setTimeout(() => {\n                        setFormValidationErrors({});\n                        setFormErrors('');\n                    }, 5000);\n                }\n            })\n    }\n\n\n    return (\n        <>\n\n            <Modal show={true} onHide={handleClose} className=\"forgot-password\" backdrop=\"static\" keyboard={false} centered>\n                <Modal.Header closeButton>\n                </Modal.Header>\n                <div className=\"modal-body\">\n                    <div className=\"forgotpasswordForm\">\n                        <h2>Forgot Password</h2>\n                        <form onSubmit={onSubmit}>\n                            <div className=\"mb-3\">\n                                {formErrors ?\n                                    <p className={formValidationErrors.length ? 'text-danger' : 'text-success'}>{formErrors}</p>\n                                    : ''}\n                                <ul className=\"list-unstyled\">\n                                    {formValidationErrors && Object.keys(formValidationErrors).map((error, index) => (\n                                        <li className=\"text-danger\" key={index}>{formValidationErrors[error][0]}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"mb-3\">\n                                <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email Address\" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n                            </div>\n                            {loading ?\n                                <button className=\"btn btn-primary\" type=\"button\" disabled >\n                                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                                </button>\n                                :\n                                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                            }\n\n                        </form>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n}\n\nexport default ForgotPasswordModal;"]},"metadata":{},"sourceType":"module"}