{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/cuverse/FolderChooser.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { injectIntl } from \"react-intl\";\nimport axios from \"axios\"; //import { API_ENDPOINT } from \"../common/Constants\";\n\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport PopoverDownloadButton from './PopoverDownloadButton'; //import Filter from \"./Filter\";\n\nimport styles from \"./styles\"; //import data from \"./data.json\";\n//console.log(data);\n//let buketPath = \"https://cuengine-portal.s3.eu-west-2.amazonaws.com/cuverse/2/2/english/\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FolderChooser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleSearch = toggle => {\n      // search.find(\"span\").hide();\n      this.setState({\n        isSearching: toggle\n      });\n    };\n\n    this.handleSearch = (event, value) => {\n      value = value.trim();\n      this.setState({\n        searchVal: value\n      });\n      if (value.length === 0) this.toggleSearch(false);\n    };\n\n    this.handleKeyUp = event => {\n      console.log(\"keyup....\");\n\n      if (event.keyCode === 27) {\n        // search.trigger(\"focusout\");\n        this.Filter.focusout();\n      }\n    };\n\n    this.handleFocusOut = event => {\n      console.log(\"focus out\");\n      if (!this.state.searchVal.length) this.setState({\n        isSearching: false\n      });\n    };\n\n    this.handleClickFolders = nextDir => event => {\n      event.preventDefault();\n      console.log(\"handleClickFolders =\", nextDir);\n      var breadcrumbsUrls = this.state.breadcrumbsUrls;\n\n      if (this.state.isSearching) {\n        // Building the breadcrumbs\n        breadcrumbsUrls = this.generateBreadcrumbs(nextDir);\n        this.toggleSearch(false);\n      } else {\n        breadcrumbsUrls.push(nextDir);\n      }\n\n      console.log(\"update breadcrumbsUrls =\", breadcrumbsUrls);\n      this.setState({\n        currentPath: nextDir,\n        breadcrumbsUrls: breadcrumbsUrls\n      });\n    };\n\n    this.handleSelectFolders = nextDir => event => {\n      event.preventDefault();\n      this.setState({\n        selected: nextDir\n      });\n    };\n\n    this.handleBreadcrumbsClick = index => event => {\n      var breadcrumbsUrls = this.state.breadcrumbsUrls;\n      var url = breadcrumbsUrls[index];\n      breadcrumbsUrls = this.generateBreadcrumbs(url);\n      this.setState({\n        breadcrumbsUrls: breadcrumbsUrls,\n        currentPath: url\n      });\n    };\n\n    this.generateBreadcrumbs = nextDir => {\n      var path = nextDir.split(\"/\").slice(0);\n\n      for (var i = 1; i < path.length; i++) {\n        path[i] = path[i - 1] + \"/\" + path[i];\n      }\n\n      return path;\n    };\n\n    this.searchByPath = dir => {\n      var path = dir.split(\"/\"),\n          demo = [this.state.data],\n          flag = 0;\n\n      for (var i = 0; i < path.length; i++) {\n        for (var j = 0; j < demo.length; j++) {\n          if (demo[j].name === path[i]) {\n            flag = 1;\n            demo = demo[j].items;\n            break;\n          }\n        }\n      }\n\n      demo = flag ? demo : [];\n      return demo;\n    };\n\n    this.searchData = (data, searchTerms) => {\n      var folders = [];\n      var files = [];\n      var self = this;\n      data.forEach(function (d) {\n        if (d.type === \"folder\") {\n          self.searchData(d.items, searchTerms);\n\n          if (d.name.toLowerCase().match(searchTerms)) {\n            folders.push(d);\n          }\n        } else if (d.type === \"file\") {\n          if (d.name.toLowerCase().match(searchTerms)) {\n            files.push(d);\n          }\n        }\n      });\n      return {\n        folders: folders,\n        files: files\n      };\n    };\n\n    this.escapeHTML = text => {\n      return text.replace(/\\&/g, \"&amp;\").replace(/\\</g, \"&lt;\").replace(/\\>/g, \"&gt;\");\n    };\n\n    this.bytesToSize = bytes => {\n      var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n      if (bytes == 0) return \"0 Bytes\";\n      var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n      return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n    };\n\n    this.getFilteredData = () => {\n      if (this.state.isSearching) {\n        console.log(\"Search Data \");\n        return this.searchData([this.state.data], this.state.searchVal);\n      } else {\n        return this.searchByPath(this.state.currentPath);\n      }\n    };\n\n    this.state = {\n      folderOnly: false,\n      isSearch: false,\n      isSearching: false,\n      searchVal: \"\",\n      currentPath: 'files',\n      breadcrumbsUrls: this.generateBreadcrumbs('files'),\n      folders: [],\n      files: [],\n      messageIdtt: \"ddddddd\",\n      data: {},\n      projectID: this.props.projectID,\n      isAuthenticated: this.props.isAuthenticated\n    }; // this.data = data;\n  }\n\n  componentDidMount() {\n    const {\n      projectID\n    } = this.props;\n    console.log(\"projectID #\", projectID, ' @ ', this.state.projectID);\n    axios.get(API_ENDPOINT + 'cuverse/mediaFiles/' + projectID).then(response => {\n      console.log(\"response.data.data\", response.data.data);\n      this.setState({\n        data: response.data.data\n      }, () => {//console.log(\"apiDataset\", this.state.apiData)\n      });\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    if (!this.state.data) {\n      return \"Loading...\";\n    }\n\n    const {\n      classes,\n      intl\n    } = this.props;\n    var filteredData = this.getFilteredData();\n    var scannedFolders = [];\n    var scannedFiles = [];\n    const test = 1000;\n\n    if (Array.isArray(filteredData)) {\n      filteredData.forEach(function (d) {\n        if (d.type === \"folder\") {\n          scannedFolders.push(d);\n        } else if (d.type === \"file\") {\n          scannedFiles.push(d);\n        }\n      });\n    } else if (typeof filteredData === \"object\") {\n      scannedFolders = filteredData.folders;\n      scannedFiles = filteredData.files;\n    }\n\n    const getFileDownload = row => {\n      console.log(\"row.mime_type \", row.mime_type, row.path);\n      let fileURL = row.path;\n      let fileName = row.name;\n      fetch(fileURL).then(resp => resp.blob()).then(blob => {\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = url; // the filename you want\n\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url); // alert('your file has downloaded!'); // or you know, something with better UX...\n      }).catch(() => alert('oh no!')); // var anchor = document.createElement('a');\n      // anchor.href = row.path;\n      // anchor.target = '_blank';\n      // anchor.download = row.name;\n      // anchor.click();\n      // document.body.removeChild(anchor);\n      // function forceDownload(href) {\n      // var anchor = document.createElement('a');\n      // anchor.href = row.path;\n      // anchor.download = row.name;\n      // document.body.appendChild(anchor);\n      // anchor.click();\n      // document.body.removeChild(anchor);\n      //}\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.filemanager, this.state.isSearching && \"searching\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.breadcrumbs,\n          children: this.state.isSearching ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Search results: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this) : this.state.breadcrumbsUrls.map((u, idx) => {\n            var name = u.split(\"/\");\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline-block\"\n              },\n              children: [idx !== this.state.breadcrumbsUrls.length - 1 && /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: this.handleBreadcrumbsClick(idx),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"folderName\",\n                  children: name[name.length - 1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 45\n              }, this), idx !== this.state.breadcrumbsUrls.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 45\n              }, this), idx === this.state.breadcrumbsUrls.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"folderName\",\n                children: name[name.length - 1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 45\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.data, !this.state.isSearching && \"animated row\"),\n          children: [scannedFolders.map((f, idx) => {\n            var itemsLength = f.items.length,\n                name = this.escapeHTML(f.name);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folders fileFolders col-sm-6\",\n              onClick: this.handleSelectFolders(f.path),\n              onClick: this.handleClickFolders(f.path),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                title: f.path,\n                className: \"folders\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row align-items-center justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-3 position-relative\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: clsx(classes.icon, classes.folder, itemsLength && \"full\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 49\n                    }, this), f.path === this.state.selected && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: clsx(classes.icon, classes.selected)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-7\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fileFolderContent\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"name\",\n                        children: name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"details\",\n                        children: itemsLength + (itemsLength === 1 ? \" item\" : itemsLength > 1 ? \" items\" : \" Empty\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 37\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 33\n            }, this);\n          }), scannedFiles.map((f, idx) => {\n            var fileSize = this.bytesToSize(f.size);\n            var name = this.escapeHTML(f.name);\n            var fileType = name.split(\".\");\n            fileType = fileType[fileType.length - 1];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: clsx(\"files col-sm-6 filesBox\", this.state.folderOnly && \"unselectable\"),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"files\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-5 position-relative\",\n                    children: [''].includes(fileType) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: f.path,\n                        width: 100,\n                        alt: f.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: clsx(classes.icon, classes.file, \"f-\" + fileType),\n                        children: fileType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 385,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-7 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"name\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        title: \"click to preview\",\n                        href: \"\",\n                        children: name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 399,\n                        columnNumber: 72\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"details\",\n                      children: [\" (\", fileSize, \") \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"d-flex mt-3 justify-content-between\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"download\",\n                        children: /*#__PURE__*/_jsxDEV(PopoverDownloadButton, {\n                          row: f,\n                          children: \"Download\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 37\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), !scannedFolders.length && !scannedFiles.length && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.nothingfound,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nofiles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noFilesDiv\",\n            children: \"No files here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nFolderChooser.propTypes = {\n  classes: PropTypes.object.isRequired,\n  intl: PropTypes.object.isRequired,\n  projectID: PropTypes.string.isRequired,\n  isAuthenticated: PropTypes.string.isRequired\n};\nexport default injectIntl(withStyles(styles)(FolderChooser));","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/cuverse/FolderChooser.js"],"names":["React","withStyles","PropTypes","clsx","injectIntl","axios","API_ENDPOINT","PopoverDownloadButton","styles","FolderChooser","Component","constructor","props","toggleSearch","toggle","setState","isSearching","handleSearch","event","value","trim","searchVal","length","handleKeyUp","console","log","keyCode","Filter","focusout","handleFocusOut","state","handleClickFolders","nextDir","preventDefault","breadcrumbsUrls","generateBreadcrumbs","push","currentPath","handleSelectFolders","selected","handleBreadcrumbsClick","index","url","path","split","slice","i","searchByPath","dir","demo","data","flag","j","name","items","searchData","searchTerms","folders","files","self","forEach","d","type","toLowerCase","match","escapeHTML","text","replace","bytesToSize","bytes","sizes","parseInt","Math","floor","round","pow","getFilteredData","folderOnly","isSearch","messageIdtt","projectID","isAuthenticated","componentDidMount","get","then","response","catch","error","componentWillUnmount","render","classes","intl","filteredData","scannedFolders","scannedFiles","test","Array","isArray","getFileDownload","row","mime_type","fileURL","fileName","fetch","resp","blob","window","URL","createObjectURL","a","document","createElement","style","display","href","download","body","appendChild","click","revokeObjectURL","alert","root","filemanager","breadcrumbs","map","u","idx","f","itemsLength","icon","folder","fileSize","size","fileType","includes","file","nothingfound","propTypes","object","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AAEA;AACA;;;;;AACA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuCnBC,YAvCmB,GAuCJC,MAAM,IAAI;AACrB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF;AAAf,OAAd;AACH,KA1CkB;;AAAA,SA2CnBG,YA3CmB,GA2CJ,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7BA,MAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,EAAR;AACA,WAAKL,QAAL,CAAc;AAAEM,QAAAA,SAAS,EAAEF;AAAb,OAAd;AACA,UAAIA,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB,KAAKT,YAAL,CAAkB,KAAlB;AAC3B,KA/CkB;;AAAA,SAgDnBU,WAhDmB,GAgDLL,KAAK,IAAI;AACnBM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,UAAIP,KAAK,CAACQ,OAAN,KAAkB,EAAtB,EAA0B;AACtB;AACA,aAAKC,MAAL,CAAYC,QAAZ;AACH;AACJ,KAtDkB;;AAAA,SAuDnBC,cAvDmB,GAuDFX,KAAK,IAAI;AACtBM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAI,CAAC,KAAKK,KAAL,CAAWT,SAAX,CAAqBC,MAA1B,EAAkC,KAAKP,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACrC,KA1DkB;;AAAA,SA2DnBe,kBA3DmB,GA2DEC,OAAO,IAAId,KAAK,IAAI;AACrCA,MAAAA,KAAK,CAACe,cAAN;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCO,OAApC;AAEA,UAAIE,eAAe,GAAG,KAAKJ,KAAL,CAAWI,eAAjC;;AAEA,UAAI,KAAKJ,KAAL,CAAWd,WAAf,EAA4B;AACxB;AACAkB,QAAAA,eAAe,GAAG,KAAKC,mBAAL,CAAyBH,OAAzB,CAAlB;AACA,aAAKnB,YAAL,CAAkB,KAAlB;AACH,OAJD,MAIO;AACHqB,QAAAA,eAAe,CAACE,IAAhB,CAAqBJ,OAArB;AACH;;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCS,eAAxC;AACA,WAAKnB,QAAL,CAAc;AAAEsB,QAAAA,WAAW,EAAEL,OAAf;AAAwBE,QAAAA,eAAe,EAAEA;AAAzC,OAAd;AACH,KA1EkB;;AAAA,SA4EnBI,mBA5EmB,GA4EGN,OAAO,IAAId,KAAK,IAAI;AACtCA,MAAAA,KAAK,CAACe,cAAN;AACA,WAAKlB,QAAL,CAAc;AAAEwB,QAAAA,QAAQ,EAAEP;AAAZ,OAAd;AACH,KA/EkB;;AAAA,SAgFnBQ,sBAhFmB,GAgFMC,KAAK,IAAIvB,KAAK,IAAI;AACvC,UAAIgB,eAAe,GAAG,KAAKJ,KAAL,CAAWI,eAAjC;AACA,UAAIQ,GAAG,GAAGR,eAAe,CAACO,KAAD,CAAzB;AAEAP,MAAAA,eAAe,GAAG,KAAKC,mBAAL,CAAyBO,GAAzB,CAAlB;AACA,WAAK3B,QAAL,CAAc;AAAEmB,QAAAA,eAAe,EAAEA,eAAnB;AAAoCG,QAAAA,WAAW,EAAEK;AAAjD,OAAd;AACH,KAtFkB;;AAAA,SAyFnBP,mBAzFmB,GAyFGH,OAAO,IAAI;AAC7B,UAAIW,IAAI,GAAGX,OAAO,CAACY,KAAR,CAAc,GAAd,EAAmBC,KAAnB,CAAyB,CAAzB,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACrB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AAClCH,QAAAA,IAAI,CAACG,CAAD,CAAJ,GAAUH,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAc,GAAd,GAAoBH,IAAI,CAACG,CAAD,CAAlC;AACH;;AACD,aAAOH,IAAP;AACH,KA/FkB;;AAAA,SAkGnBI,YAlGmB,GAkGJC,GAAG,IAAI;AAClB,UAAIL,IAAI,GAAGK,GAAG,CAACJ,KAAJ,CAAU,GAAV,CAAX;AAAA,UACIK,IAAI,GAAG,CAAC,KAAKnB,KAAL,CAAWoB,IAAZ,CADX;AAAA,UAEIC,IAAI,GAAG,CAFX;;AAIA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACrB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAsC;AAClC,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAAC3B,MAAzB,EAAiC8B,CAAC,EAAlC,EAAsC;AAClC,cAAIH,IAAI,CAACG,CAAD,CAAJ,CAAQC,IAAR,KAAiBV,IAAI,CAACG,CAAD,CAAzB,EAA8B;AAC1BK,YAAAA,IAAI,GAAG,CAAP;AACAF,YAAAA,IAAI,GAAGA,IAAI,CAACG,CAAD,CAAJ,CAAQE,KAAf;AACA;AACH;AACJ;AACJ;;AAEDL,MAAAA,IAAI,GAAGE,IAAI,GAAGF,IAAH,GAAU,EAArB;AACA,aAAOA,IAAP;AACH,KAnHkB;;AAAA,SAsHnBM,UAtHmB,GAsHN,CAACL,IAAD,EAAOM,WAAP,KAAuB;AAChC,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,IAAI,GAAG,IAAX;AACAT,MAAAA,IAAI,CAACU,OAAL,CAAa,UAAUC,CAAV,EAAa;AACtB,YAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACrBH,UAAAA,IAAI,CAACJ,UAAL,CAAgBM,CAAC,CAACP,KAAlB,EAAyBE,WAAzB;;AAEA,cAAIK,CAAC,CAACR,IAAF,CAAOU,WAAP,GAAqBC,KAArB,CAA2BR,WAA3B,CAAJ,EAA6C;AACzCC,YAAAA,OAAO,CAACrB,IAAR,CAAayB,CAAb;AACH;AACJ,SAND,MAMO,IAAIA,CAAC,CAACC,IAAF,KAAW,MAAf,EAAuB;AAC1B,cAAID,CAAC,CAACR,IAAF,CAAOU,WAAP,GAAqBC,KAArB,CAA2BR,WAA3B,CAAJ,EAA6C;AACzCE,YAAAA,KAAK,CAACtB,IAAN,CAAWyB,CAAX;AACH;AACJ;AACJ,OAZD;AAcA,aAAO;AAAEJ,QAAAA,OAAO,EAAEA,OAAX;AAAoBC,QAAAA,KAAK,EAAEA;AAA3B,OAAP;AACH,KAzIkB;;AAAA,SA4InBO,UA5ImB,GA4INC,IAAI,IAAI;AACjB,aAAOA,IAAI,CACNC,OADE,CACM,KADN,EACa,OADb,EAEFA,OAFE,CAEM,KAFN,EAEa,MAFb,EAGFA,OAHE,CAGM,KAHN,EAGa,MAHb,CAAP;AAIH,KAjJkB;;AAAA,SAoJnBC,WApJmB,GAoJLC,KAAK,IAAI;AACnB,UAAIC,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,CAAZ;AACA,UAAID,KAAK,IAAI,CAAb,EAAgB,OAAO,SAAP;AAChB,UAAIvB,CAAC,GAAGyB,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC/C,GAAL,CAAS4C,KAAT,IAAkBG,IAAI,CAAC/C,GAAL,CAAS,IAAT,CAA7B,CAAD,CAAhB;AACA,aAAO+C,IAAI,CAACE,KAAL,CAAWL,KAAK,GAAGG,IAAI,CAACG,GAAL,CAAS,IAAT,EAAe7B,CAAf,CAAnB,EAAsC,CAAtC,IAA2C,GAA3C,GAAiDwB,KAAK,CAACxB,CAAD,CAA7D;AACH,KAzJkB;;AAAA,SA2JnB8B,eA3JmB,GA2JD,MAAM;AACpB,UAAI,KAAK9C,KAAL,CAAWd,WAAf,EAA4B;AACxBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAAO,KAAK8B,UAAL,CAAgB,CAAC,KAAKzB,KAAL,CAAWoB,IAAZ,CAAhB,EAAmC,KAAKpB,KAAL,CAAWT,SAA9C,CAAP;AACH,OAHD,MAGO;AACH,eAAO,KAAK0B,YAAL,CAAkB,KAAKjB,KAAL,CAAWO,WAA7B,CAAP;AACH;AACJ,KAlKkB;;AAEf,SAAKP,KAAL,GAAa;AACT+C,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGT9D,MAAAA,WAAW,EAAE,KAHJ;AAITK,MAAAA,SAAS,EAAE,EAJF;AAKTgB,MAAAA,WAAW,EAAE,OALJ;AAMTH,MAAAA,eAAe,EAAE,KAAKC,mBAAL,CAAyB,OAAzB,CANR;AAOTsB,MAAAA,OAAO,EAAE,EAPA;AAQTC,MAAAA,KAAK,EAAE,EARE;AASTqB,MAAAA,WAAW,EAAE,SATJ;AAUT7B,MAAAA,IAAI,EAAE,EAVG;AAWT8B,MAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWoE,SAXb;AAYTC,MAAAA,eAAe,EAAE,KAAKrE,KAAL,CAAWqE;AAZnB,KAAb,CAFe,CAkBf;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEF,MAAAA;AAAF,QAAgB,KAAKpE,KAA3B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BuD,SAA3B,EAAsC,KAAtC,EAA6C,KAAKlD,KAAL,CAAWkD,SAAxD;AACA3E,IAAAA,KAAK,CAAC8E,GAAN,CAAU7E,YAAY,GAAG,qBAAf,GAAuC0E,SAAjD,EAA4DI,IAA5D,CAAkEC,QAAD,IAAc;AAC3E7D,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC4D,QAAQ,CAACnC,IAAT,CAAcA,IAAhD;AACA,WAAKnC,QAAL,CAAc;AACVmC,QAAAA,IAAI,EAAEmC,QAAQ,CAACnC,IAAT,CAAcA;AADV,OAAd,EAEG,MAAM,CACL;AACH,OAJD;AAMH,KARD,EAQGoC,KARH,CAQUC,KAAD,IAAW;AAChB/D,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB8D,KAArB;AACH,KAVD;AAYH;;AACDC,EAAAA,oBAAoB,GAAG,CAAG;;AAiI1BC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAK3D,KAAL,CAAWoB,IAAhB,EAAsB;AAClB,aAAO,YAAP;AACH;;AACD,UAAM;AAAEwC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAK/E,KAA/B;AAEA,QAAIgF,YAAY,GAAG,KAAKhB,eAAL,EAAnB;AACA,QAAIiB,cAAc,GAAG,EAArB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,UAAMC,IAAI,GAAG,IAAb;;AAEA,QAAIC,KAAK,CAACC,OAAN,CAAcL,YAAd,CAAJ,EAAiC;AAC7BA,MAAAA,YAAY,CAAChC,OAAb,CAAqB,UAAUC,CAAV,EAAa;AAC9B,YAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACrB+B,UAAAA,cAAc,CAACzD,IAAf,CAAoByB,CAApB;AACH,SAFD,MAEO,IAAIA,CAAC,CAACC,IAAF,KAAW,MAAf,EAAuB;AAC1BgC,UAAAA,YAAY,CAAC1D,IAAb,CAAkByB,CAAlB;AACH;AACJ,OAND;AAOH,KARD,MAQO,IAAI,OAAO+B,YAAP,KAAwB,QAA5B,EAAsC;AACzCC,MAAAA,cAAc,GAAGD,YAAY,CAACnC,OAA9B;AACAqC,MAAAA,YAAY,GAAGF,YAAY,CAAClC,KAA5B;AACH;;AAED,UAAMwC,eAAe,GAAIC,GAAD,IAAS;AAC7B3E,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B0E,GAAG,CAACC,SAAlC,EAA6CD,GAAG,CAACxD,IAAjD;AACA,UAAI0D,OAAO,GAAGF,GAAG,CAACxD,IAAlB;AACA,UAAI2D,QAAQ,GAAGH,GAAG,CAAC9C,IAAnB;AAEAkD,MAAAA,KAAK,CAACF,OAAD,CAAL,CACKjB,IADL,CACUoB,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKrB,IAFL,CAEUqB,IAAI,IAAI;AACV,cAAM/D,GAAG,GAAGgE,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BH,IAA3B,CAAZ;AACA,cAAMI,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,QAAAA,CAAC,CAACG,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACAJ,QAAAA,CAAC,CAACK,IAAF,GAASxE,GAAT,CAJU,CAKV;;AACAmE,QAAAA,CAAC,CAACM,QAAF,GAAab,QAAb;AACAQ,QAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,CAA1B;AACAA,QAAAA,CAAC,CAACS,KAAF;AACAZ,QAAAA,MAAM,CAACC,GAAP,CAAWY,eAAX,CAA2B7E,GAA3B,EATU,CAUV;AACH,OAbL,EAcK4C,KAdL,CAcW,MAAMkC,KAAK,CAAC,QAAD,CAdtB,EAL6B,CAqB7B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGH,KAtCD;;AAyCA,wBACI;AAAK,MAAA,SAAS,EAAE9B,OAAO,CAAC+B,IAAxB;AAAA,6BACI;AACI,QAAA,SAAS,EAAEtH,IAAI,CACXuF,OAAO,CAACgC,WADG,EAEX,KAAK5F,KAAL,CAAWd,WAAX,IAA0B,WAFf,CADnB;AAAA,gCAgCI;AAAK,UAAA,SAAS,EAAE0E,OAAO,CAACiC,WAAxB;AAAA,oBACK,KAAK7F,KAAL,CAAWd,WAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,GAGG,KAAKc,KAAL,CAAWI,eAAX,CAA2B0F,GAA3B,CAA+B,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACvC,gBAAIzE,IAAI,GAAGwE,CAAC,CAACjF,KAAF,CAAQ,GAAR,CAAX;AACA,gCACI;AAAK,cAAA,KAAK,EAAE;AAAEqE,gBAAAA,OAAO,EAAE;AAAX,eAAZ;AAAA,yBACKa,GAAG,KAAK,KAAKhG,KAAL,CAAWI,eAAX,CAA2BZ,MAA3B,GAAoC,CAA5C,iBACG;AAAG,gBAAA,OAAO,EAAE,KAAKkB,sBAAL,CAA4BsF,GAA5B,CAAZ;AAAA,uCACI;AAAM,kBAAA,SAAS,EAAC,YAAhB;AAAA,4BACKzE,IAAI,CAACA,IAAI,CAAC/B,MAAL,GAAc,CAAf;AADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFR,EAQKwG,GAAG,KAAK,KAAKhG,KAAL,CAAWI,eAAX,CAA2BZ,MAA3B,GAAoC,CAA5C,iBACG;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATR,EAWKwG,GAAG,KAAK,KAAKhG,KAAL,CAAWI,eAAX,CAA2BZ,MAA3B,GAAoC,CAA5C,iBACG;AAAM,gBAAA,SAAS,EAAC,YAAhB;AAAA,0BACK+B,IAAI,CAACA,IAAI,CAAC/B,MAAL,GAAc,CAAf;AADT;AAAA;AAAA;AAAA;AAAA,sBAZR;AAAA,eAA8CwG,GAA9C;AAAA;AAAA;AAAA;AAAA,oBADJ;AAmBH,WArBD;AAJR;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eA6DI;AACI,UAAA,SAAS,EAAE3H,IAAI,CACXuF,OAAO,CAACxC,IADG,EAEX,CAAC,KAAKpB,KAAL,CAAWd,WAAZ,IAA2B,cAFhB,CADnB;AAAA,qBAMK6E,cAAc,CAAC+B,GAAf,CAAmB,CAACG,CAAD,EAAID,GAAJ,KAAY;AAC5B,gBAAIE,WAAW,GAAGD,CAAC,CAACzE,KAAF,CAAQhC,MAA1B;AAAA,gBACI+B,IAAI,GAAG,KAAKY,UAAL,CAAgB8D,CAAC,CAAC1E,IAAlB,CADX;AAGA,gCACI;AACI,cAAA,SAAS,EAAC,8BADd;AAEI,cAAA,OAAO,EAAE,KAAKf,mBAAL,CAAyByF,CAAC,CAACpF,IAA3B,CAFb;AAGI,cAAA,OAAO,EAAE,KAAKZ,kBAAL,CAAwBgG,CAAC,CAACpF,IAA1B,CAHb;AAAA,qCAMI;AAAG,gBAAA,KAAK,EAAEoF,CAAC,CAACpF,IAAZ;AAAkB,gBAAA,SAAS,EAAC,SAA5B;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,gDAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,yBAAf;AAAA,4CACI;AACI,sBAAA,SAAS,EAAExC,IAAI,CACXuF,OAAO,CAACuC,IADG,EAEXvC,OAAO,CAACwC,MAFG,EAGXF,WAAW,IAAI,MAHJ;AADnB;AAAA;AAAA;AAAA;AAAA,4BADJ,EAQKD,CAAC,CAACpF,IAAF,KAAW,KAAKb,KAAL,CAAWS,QAAtB,iBACG;AAAM,sBAAA,SAAS,EAAEpC,IAAI,CAACuF,OAAO,CAACuC,IAAT,EAAevC,OAAO,CAACnD,QAAvB;AAArB;AAAA;AAAA;AAAA;AAAA,4BATR;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAaI;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,2CACI;AAAK,sBAAA,SAAS,EAAC,mBAAf;AAAA,8CACI;AAAK,wBAAA,SAAS,EAAC,MAAf;AAAA,kCAAuBc;AAAvB;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAK,wBAAA,SAAS,EAAC,SAAf;AAAA,kCACK2E,WAAW,IACPA,WAAW,KAAK,CAAhB,GACK,OADL,GAEKA,WAAW,GAAG,CAAd,GACI,QADJ,GAEI,QALF;AADhB;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ,eAISF,GAJT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAuCH,WA3CA,CANL,EAkDKhC,YAAY,CAAC8B,GAAb,CAAiB,CAACG,CAAD,EAAID,GAAJ,KAAY;AAC1B,gBAAIK,QAAQ,GAAG,KAAK/D,WAAL,CAAiB2D,CAAC,CAACK,IAAnB,CAAf;AACA,gBAAI/E,IAAI,GAAG,KAAKY,UAAL,CAAgB8D,CAAC,CAAC1E,IAAlB,CAAX;AACA,gBAAIgF,QAAQ,GAAGhF,IAAI,CAACT,KAAL,CAAW,GAAX,CAAf;AACAyF,YAAAA,QAAQ,GAAGA,QAAQ,CAACA,QAAQ,CAAC/G,MAAT,GAAkB,CAAnB,CAAnB;AAEA,gCACI;AACI,cAAA,SAAS,EAAEnB,IAAI,CACX,yBADW,EAEX,KAAK2B,KAAL,CAAW+C,UAAX,IAAyB,cAFd,CADnB;AAAA,qCAOI;AAAG,gBAAA,SAAS,EAAC,OAAb;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,wBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,yBAAf;AAAA,8BACK,CAAC,EAAD,EAAKyD,QAAL,CAAcD,QAAd,iBACD;AAAA,6CACA;AAAK,wBAAA,GAAG,EAAEN,CAAC,CAACpF,IAAZ;AAAkB,wBAAA,KAAK,EAAE,GAAzB;AAA8B,wBAAA,GAAG,EAAEoF,CAAC,CAAC1E;AAArC;AAAA;AAAA;AAAA;AAAA;AADA,qCADC,gBAKD;AAAA,6CACA;AACI,wBAAA,SAAS,EAAElD,IAAI,CACXuF,OAAO,CAACuC,IADG,EAEXvC,OAAO,CAAC6C,IAFG,EAGX,OAAOF,QAHI,CADnB;AAAA,kCAOKA;AAPL;AAAA;AAAA;AAAA;AAAA;AADA;AANJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAqBI;AAAK,oBAAA,SAAS,EAAC,QAAf;AAAA,4CACI;AAAM,sBAAA,SAAS,EAAC,MAAhB;AAAA,6CAAuB;AAAM,wBAAA,KAAK,EAAC,kBAAZ;AAA+B,wBAAA,IAAI,EAAC,EAApC;AAAA,kCAAwChF;AAAxC;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAM,sBAAA,SAAS,EAAC,SAAhB;AAAA,uCAA6B8E,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAK,sBAAA,SAAS,EAAC,qCAAf;AAAA,6CACI;AAAK,wBAAA,SAAS,EAAC,UAAf;AAAA,+CACI,QAAC,qBAAD;AAAuB,0BAAA,GAAG,EAAEJ,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAPJ,eAKSD,GALT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAoDH,WA1DA,CAlDL;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DJ,EA6KQ,CAACjC,cAAc,CAACvE,MAAhB,IAA0B,CAACwE,YAAY,CAACxE,MAAxC,iBACI;AAAK,UAAA,SAAS,EAAEoE,OAAO,CAAC8C,YAAxB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9KZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAyLH;;AAjauC;;AAoa5C/H,aAAa,CAACgI,SAAd,GAA0B;AACtB/C,EAAAA,OAAO,EAAExF,SAAS,CAACwI,MAAV,CAAiBC,UADJ;AAEtBhD,EAAAA,IAAI,EAAEzF,SAAS,CAACwI,MAAV,CAAiBC,UAFD;AAGtB3D,EAAAA,SAAS,EAAE9E,SAAS,CAAC0I,MAAV,CAAiBD,UAHN;AAItB1D,EAAAA,eAAe,EAAE/E,SAAS,CAAC0I,MAAV,CAAiBD;AAJZ,CAA1B;AAQA,eAAevI,UAAU,CAACH,UAAU,CAACO,MAAD,CAAV,CAAmBC,aAAnB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { injectIntl } from \"react-intl\";\nimport axios from \"axios\";\n\n//import { API_ENDPOINT } from \"../common/Constants\";\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport PopoverDownloadButton from './PopoverDownloadButton';\n//import Filter from \"./Filter\";\nimport styles from \"./styles\";\n//import data from \"./data.json\";\n\n//console.log(data);\n//let buketPath = \"https://cuengine-portal.s3.eu-west-2.amazonaws.com/cuverse/2/2/english/\";\nclass FolderChooser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            folderOnly: false,\n            isSearch: false,\n            isSearching: false,\n            searchVal: \"\",\n            currentPath: 'files',\n            breadcrumbsUrls: this.generateBreadcrumbs('files'),\n            folders: [],\n            files: [],\n            messageIdtt: \"ddddddd\",\n            data: {},\n            projectID: this.props.projectID,\n            isAuthenticated: this.props.isAuthenticated\n\n        };\n\n        // this.data = data;\n    }\n\n    componentDidMount() {\n        const { projectID } = this.props;\n        console.log(\"projectID #\", projectID, ' @ ', this.state.projectID);\n        axios.get(API_ENDPOINT + 'cuverse/mediaFiles/' + projectID).then((response) => {\n            console.log(\"response.data.data\", response.data.data);\n            this.setState({\n                data: response.data.data\n            }, () => {\n                //console.log(\"apiDataset\", this.state.apiData)\n            })\n\n        }).catch((error) => {\n            console.log(\"error\", error);\n        })\n\n    }\n    componentWillUnmount() { }\n\n    toggleSearch = toggle => {\n        // search.find(\"span\").hide();\n        this.setState({ isSearching: toggle });\n    };\n    handleSearch = (event, value) => {\n        value = value.trim();\n        this.setState({ searchVal: value });\n        if (value.length === 0) this.toggleSearch(false);\n    };\n    handleKeyUp = event => {\n        console.log(\"keyup....\");\n        if (event.keyCode === 27) {\n            // search.trigger(\"focusout\");\n            this.Filter.focusout();\n        }\n    };\n    handleFocusOut = event => {\n        console.log(\"focus out\");\n        if (!this.state.searchVal.length) this.setState({ isSearching: false });\n    };\n    handleClickFolders = nextDir => event => {\n        event.preventDefault();\n        console.log(\"handleClickFolders =\", nextDir);\n\n        var breadcrumbsUrls = this.state.breadcrumbsUrls;\n\n        if (this.state.isSearching) {\n            // Building the breadcrumbs\n            breadcrumbsUrls = this.generateBreadcrumbs(nextDir);\n            this.toggleSearch(false);\n        } else {\n            breadcrumbsUrls.push(nextDir);\n        }\n        console.log(\"update breadcrumbsUrls =\", breadcrumbsUrls);\n        this.setState({ currentPath: nextDir, breadcrumbsUrls: breadcrumbsUrls });\n    };\n\n    handleSelectFolders = nextDir => event => {\n        event.preventDefault();\n        this.setState({ selected: nextDir });\n    };\n    handleBreadcrumbsClick = index => event => {\n        var breadcrumbsUrls = this.state.breadcrumbsUrls;\n        var url = breadcrumbsUrls[index];\n\n        breadcrumbsUrls = this.generateBreadcrumbs(url);\n        this.setState({ breadcrumbsUrls: breadcrumbsUrls, currentPath: url });\n    };\n\n    // Splits a file path and turns it into clickable breadcrumbs\n    generateBreadcrumbs = nextDir => {\n        var path = nextDir.split(\"/\").slice(0);\n        for (var i = 1; i < path.length; i++) {\n            path[i] = path[i - 1] + \"/\" + path[i];\n        }\n        return path;\n    };\n\n    // Locates a file by path\n    searchByPath = dir => {\n        var path = dir.split(\"/\"),\n            demo = [this.state.data],\n            flag = 0;\n\n        for (var i = 0; i < path.length; i++) {\n            for (var j = 0; j < demo.length; j++) {\n                if (demo[j].name === path[i]) {\n                    flag = 1;\n                    demo = demo[j].items;\n                    break;\n                }\n            }\n        }\n\n        demo = flag ? demo : [];\n        return demo;\n    };\n\n    // Recursively search through the file tree\n    searchData = (data, searchTerms) => {\n        var folders = [];\n        var files = [];\n        var self = this;\n        data.forEach(function (d) {\n            if (d.type === \"folder\") {\n                self.searchData(d.items, searchTerms);\n\n                if (d.name.toLowerCase().match(searchTerms)) {\n                    folders.push(d);\n                }\n            } else if (d.type === \"file\") {\n                if (d.name.toLowerCase().match(searchTerms)) {\n                    files.push(d);\n                }\n            }\n        });\n\n        return { folders: folders, files: files };\n    };\n\n    // This function escapes special html characters in names\n    escapeHTML = text => {\n        return text\n            .replace(/\\&/g, \"&amp;\")\n            .replace(/\\</g, \"&lt;\")\n            .replace(/\\>/g, \"&gt;\");\n    };\n\n    // Convert file sizes from bytes to human readable units\n    bytesToSize = bytes => {\n        var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n        if (bytes == 0) return \"0 Bytes\";\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n        return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n    };\n\n    getFilteredData = () => {\n        if (this.state.isSearching) {\n            console.log(\"Search Data \");\n            return this.searchData([this.state.data], this.state.searchVal);\n        } else {\n            return this.searchByPath(this.state.currentPath);\n        }\n    };\n\n\n\n    render() {\n        if (!this.state.data) {\n            return \"Loading...\";\n        }\n        const { classes, intl } = this.props;\n\n        var filteredData = this.getFilteredData();\n        var scannedFolders = [];\n        var scannedFiles = [];\n        const test = 1000;\n\n        if (Array.isArray(filteredData)) {\n            filteredData.forEach(function (d) {\n                if (d.type === \"folder\") {\n                    scannedFolders.push(d);\n                } else if (d.type === \"file\") {\n                    scannedFiles.push(d);\n                }\n            });\n        } else if (typeof filteredData === \"object\") {\n            scannedFolders = filteredData.folders;\n            scannedFiles = filteredData.files;\n        }\n\n        const getFileDownload = (row) => {\n            console.log(\"row.mime_type \", row.mime_type, row.path);\n            let fileURL = row.path;\n            let fileName = row.name;\n\n            fetch(fileURL)\n                .then(resp => resp.blob())\n                .then(blob => {\n                    const url = window.URL.createObjectURL(blob);\n                    const a = document.createElement('a');\n                    a.style.display = 'none';\n                    a.href = url;\n                    // the filename you want\n                    a.download = fileName;\n                    document.body.appendChild(a);\n                    a.click();\n                    window.URL.revokeObjectURL(url);\n                    // alert('your file has downloaded!'); // or you know, something with better UX...\n                })\n                .catch(() => alert('oh no!'));\n\n            // var anchor = document.createElement('a');\n            // anchor.href = row.path;\n            // anchor.target = '_blank';\n            // anchor.download = row.name;\n            // anchor.click();\n            // document.body.removeChild(anchor);\n\n            // function forceDownload(href) {\n            // var anchor = document.createElement('a');\n            // anchor.href = row.path;\n            // anchor.download = row.name;\n            // document.body.appendChild(anchor);\n            // anchor.click();\n            // document.body.removeChild(anchor);\n            //}\n\n\n        };\n\n\n        return (\n            <div className={classes.root}>\n                <div\n                    className={clsx(\n                        classes.filemanager,\n                        this.state.isSearching && \"searching\"\n                    )}\n                >\n                    {/* <div\n                        className={classes.search}\n                        onClick={() => {\n                            this.toggleSearch(true);\n                        }}\n                    >\n                        {this.state.isSearching && (\n                            <Filter\n                                updateFilter={this.handleSearch}\n                                onKeyUp={this.handleKeyUp}\n                                onFocusOut={this.handleFocusOut}\n                                value={this.state.searchVal}\n                                placeholder={intl.formatMessage(\n                                    {\n                                        id: \"messageIdtt\",\n                                        defaultMessage: `Hello {name}, you have {unreadCount, number} {unreadCount, plural, one {message}  other {messages} }`\n                                    },\n                                    { name: <b>{\"fvd\"}</b>, test }\n                                )}\n                                ref={input => {\n                                    this.Filter = input;\n                                }}\n                            />\n                        )}\n                    </div> */}\n\n                    <div className={classes.breadcrumbs}>\n                        {this.state.isSearching ? (\n                            <span>Search results: </span>\n                        ) : (\n                            this.state.breadcrumbsUrls.map((u, idx) => {\n                                var name = u.split(\"/\");\n                                return (\n                                    <div style={{ display: \"inline-block\" }} key={idx}>\n                                        {idx !== this.state.breadcrumbsUrls.length - 1 && (\n                                            <a onClick={this.handleBreadcrumbsClick(idx)}>\n                                                <span className=\"folderName\">\n                                                    {name[name.length - 1]}\n                                                </span>\n                                            </a>\n                                        )}\n                                        {idx !== this.state.breadcrumbsUrls.length - 1 && (\n                                            <span className=\"arrow\">→</span>\n                                        )}\n                                        {idx === this.state.breadcrumbsUrls.length - 1 && (\n                                            <span className=\"folderName\">\n                                                {name[name.length - 1]}\n                                            </span>\n                                        )}\n                                    </div>\n                                );\n                            })\n                        )}\n                    </div>\n\n                    <div\n                        className={clsx(\n                            classes.data,\n                            !this.state.isSearching && \"animated row\"\n                        )}\n                    >\n                        {scannedFolders.map((f, idx) => {\n                            var itemsLength = f.items.length,\n                                name = this.escapeHTML(f.name);\n\n                            return (\n                                <div\n                                    className=\"folders fileFolders col-sm-6\"\n                                    onClick={this.handleSelectFolders(f.path)}\n                                    onClick={this.handleClickFolders(f.path)}\n                                    key={idx}\n                                >\n                                    <a title={f.path} className=\"folders\">\n                                        <div className=\"row align-items-center justify-content-between\">\n                                            <div className=\"col-3 position-relative\">\n                                                <span\n                                                    className={clsx(\n                                                        classes.icon,\n                                                        classes.folder,\n                                                        itemsLength && \"full\"\n                                                    )}\n                                                />\n                                                {f.path === this.state.selected && (\n                                                    <span className={clsx(classes.icon, classes.selected)} />\n                                                )}\n                                            </div>\n                                            <div className=\"col-7\">\n                                                <div className=\"fileFolderContent\">\n                                                    <div className=\"name\">{name}</div>\n                                                    <div className=\"details\">\n                                                        {itemsLength +\n                                                            (itemsLength === 1\n                                                                ? \" item\"\n                                                                : itemsLength > 1\n                                                                    ? \" items\"\n                                                                    : \" Empty\")}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </a>\n                                </div>\n                            );\n                        })}\n                        {scannedFiles.map((f, idx) => {\n                            var fileSize = this.bytesToSize(f.size);\n                            var name = this.escapeHTML(f.name);\n                            var fileType = name.split(\".\");\n                            fileType = fileType[fileType.length - 1];\n\n                            return (\n                                <div\n                                    className={clsx(\n                                        \"files col-sm-6 filesBox\",\n                                        this.state.folderOnly && \"unselectable\"\n                                    )}\n                                    key={idx}\n                                >\n                                    <a className=\"files\">\n                                        <div className=\"row align-items-center\">\n                                            <div className=\"col-5 position-relative\">\n                                                {[''].includes(fileType) ?\n                                                <>\n                                                <img src={f.path} width={100} alt={f.name} />\n                                                </>\n                                                :\n                                                <>\n                                                <span\n                                                    className={clsx(\n                                                        classes.icon,\n                                                        classes.file,\n                                                        \"f-\" + fileType\n                                                    )}\n                                                >\n                                                    {fileType}\n                                                </span>\n                                                </>\n                                                }\n                                                \n                                            </div>\n                                            <div className=\"col-7 \">\n                                                <span className=\"name\"><span title=\"click to preview\" href=\"\">{name}</span></span>\n                                                <span className=\"details\"> ({fileSize}) </span>\n                                                <div className=\"d-flex mt-3 justify-content-between\">\n                                                    <div className=\"download\">\n                                                        <PopoverDownloadButton row={f}>\n                                                            Download\n                                                        </PopoverDownloadButton>\n                                                     {/* <button className=\"btn btn-sm btn-primary align-items-center mb-3\" onClick={() => getFileDownload(f)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-download\" viewBox=\"0 0 16 16\">\n                                                         <path d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\n                                                         <path d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\" />\n                                                     </svg> Download</button> */}\n                                                    </div>\n                                                    {/* <div className=\"previewEye\">\n                                                    <a title=\"click to preview\" target=\"_blank\" href={buketPath + name}><img src=\"../assets/images/eye.svg\"></img></a>\n                                                    </div> */}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </a>\n                                </div>\n                            );\n                        })}\n                    </div>\n\n                    {\n                        !scannedFolders.length && !scannedFiles.length && (\n                            <div className={classes.nothingfound}>\n                                <div className=\"nofiles\" />\n                                <div className=\"noFilesDiv\">No files here.</div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nFolderChooser.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.object.isRequired,\n    projectID: PropTypes.string.isRequired,\n    isAuthenticated: PropTypes.string.isRequired,\n\n};\n\nexport default injectIntl(withStyles(styles)(FolderChooser));\n"]},"metadata":{},"sourceType":"module"}