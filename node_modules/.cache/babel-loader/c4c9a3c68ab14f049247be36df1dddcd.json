{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/dashboard/MeetingsListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*const columns = [\n   {\n     name: 'Avatar',\n     cell: row => <img height=\"30px\" width=\"30px\" alt={row.first_name} src={row.avatar} />,\n   },\n   {\n     name: 'First Name',\n     selector: 'first_name',\n   },\n   {\n     name: 'Last Name',\n     selector: 'last_name',\n   },\n   {\n     name: 'Email',\n     selector: 'email',\n   }\n  ];\n  */\n}\n\nfunction MeetingsListPage() {\n  _s();\n\n  const authHeader = useAuthHeader();\n  const [meetingLoader, setMeetingsLoader] = useState(false);\n  const [meetings, setMeetings] = useState([]);\n  const [page, setPage] = useState(1);\n  const countPerPage = 12;\n  const columns = React.useMemo(() => [{\n    name: \"ID\",\n    selector: \"id\",\n    sortable: true\n  }, {\n    name: \"CreatedDate\",\n    selector: \"createdDate\",\n    sortable: true\n  }, {\n    name: \"CreatedTime\",\n    selector: \"createdTime\",\n    sortable: true\n  }, {\n    name: \"MeetingWithCustomer\",\n    selector: \"MeetingWithCustomer\",\n    sortable: true\n  }, {\n    name: \"MeetingLocation\",\n    selector: \"MeetingLocation\",\n    sortable: true\n  }, {\n    name: \"MeetingType\",\n    selector: \"MeetingType\",\n    sortable: true\n  }, {\n    name: \"MeetingTitle\",\n    selector: \"MeetingTitle\",\n    sortable: true\n  }], []);\n  useEffect(() => {\n    fetchMeetingData();\n  }, [page]);\n\n  async function fetchMeetingData() {\n    setMeetingsLoader(true);\n    let postData = {\n      test: null,\n      start_date: '2022-02-01T00:00:00.000Z',\n      end_date: '2022-02-28T00:00:00.000Z'\n    };\n\n    try {\n      setMeetingsLoader(true);\n      const res = await axios.post(API_ENDPOINT + \"orgzit/meetinglist\", postData, {\n        headers: {\n          Authorization: authHeader()\n        }\n      });\n      setMeetingsLoader(false);\n      setMeetings(res.data.data);\n    } catch (error) {\n      //console.error(\"error \", error);\n      setMeetingsLoader(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchMeetingData();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      title: \"Employees\",\n      columns: columns,\n      data: meetings,\n      highlightOnHover: true,\n      pagination: true,\n      paginationServer: true,\n      paginationTotalRows: meetings.total,\n      paginationPerPage: countPerPage,\n      paginationComponentOptions: {\n        noRowsPerPage: true\n      },\n      onChangePage: page => setPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetingsListPage, \"ARdPpjSwc45F/uEzM5sD8doDDqM=\", false, function () {\n  return [useAuthHeader];\n});\n\n_c = MeetingsListPage;\nexport default MeetingsListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetingsListPage\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/dashboard/MeetingsListPage.js"],"names":["React","useState","useEffect","DataTable","API_ENDPOINT","useAuthHeader","axios","MeetingsListPage","authHeader","meetingLoader","setMeetingsLoader","meetings","setMeetings","page","setPage","countPerPage","columns","useMemo","name","selector","sortable","fetchMeetingData","postData","test","start_date","end_date","res","post","headers","Authorization","data","error","total","noRowsPerPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAG;;AAGH,SAASC,gBAAT,GAA4B;AAAA;;AAE1B,QAAMC,UAAU,GAAGH,aAAa,EAAhC;AACA,QAAM,CAACI,aAAD,EAAgBC,iBAAhB,IAAqCT,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMc,YAAY,GAAG,EAArB;AAEA,QAAMC,OAAO,GAAGhB,KAAK,CAACiB,OAAN,CAAc,MAAM,CAChC;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,QAAQ,EAAE,IAAxB;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GADgC,EAEhC;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,QAAQ,EAAE,aAAjC;AAAgDC,IAAAA,QAAQ,EAAE;AAA1D,GAFgC,EAGhC;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,QAAQ,EAAE,aAAjC;AAAgDC,IAAAA,QAAQ,EAAE;AAA1D,GAHgC,EAIhC;AAAEF,IAAAA,IAAI,EAAE,qBAAR;AAA+BC,IAAAA,QAAQ,EAAE,qBAAzC;AAAgEC,IAAAA,QAAQ,EAAE;AAA1E,GAJgC,EAKhC;AAAEF,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA,QAAQ,EAAE,iBAArC;AAAwDC,IAAAA,QAAQ,EAAE;AAAlE,GALgC,EAMhC;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,QAAQ,EAAE,aAAjC;AAAgDC,IAAAA,QAAQ,EAAE;AAA1D,GANgC,EAOhC;AAAEF,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,QAAQ,EAAE,cAAlC;AAAkDC,IAAAA,QAAQ,EAAE;AAA5D,GAPgC,CAApB,EASf,EATe,CAAhB;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACR,IAAD,CAFM,CAAT;;AAKA,iBAAeQ,gBAAf,GAAkC;AAChCX,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,QAAIY,QAAQ,GAAG;AACbC,MAAAA,IAAI,EAAE,IADO;AAEbC,MAAAA,UAAU,EAAE,0BAFC;AAGbC,MAAAA,QAAQ,EAAE;AAHG,KAAf;;AAMA,QAAI;AACFf,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,YAAMgB,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAWvB,YAAY,GAAG,oBAA1B,EAAgDkB,QAAhD,EAA0D;AAAEM,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAErB,UAAU;AAA3B;AAAX,OAA1D,CAAlB;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,MAAAA,WAAW,CAACc,GAAG,CAACI,IAAJ,CAASA,IAAV,CAAX;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACd;AACArB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AAEF;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACR,IAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,OAAO,EAAEG,OAFX;AAGE,MAAA,IAAI,EAAEL,QAHR;AAIE,MAAA,gBAAgB,MAJlB;AAKE,MAAA,UAAU,MALZ;AAME,MAAA,gBAAgB,MANlB;AAOE,MAAA,mBAAmB,EAAEA,QAAQ,CAACqB,KAPhC;AAQE,MAAA,iBAAiB,EAAEjB,YARrB;AASE,MAAA,0BAA0B,EAAE;AAC1BkB,QAAAA,aAAa,EAAE;AADW,OAT9B;AAYE,MAAA,YAAY,EAAEpB,IAAI,IAAIC,OAAO,CAACD,IAAD;AAZ/B;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAnEQN,gB;UAEYF,a;;;KAFZE,gB;AAqET,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_ENDPOINT } from \"../../common/Constants\";\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\n \n{/*const columns = [\n  {\n    name: 'Avatar',\n    cell: row => <img height=\"30px\" width=\"30px\" alt={row.first_name} src={row.avatar} />,\n  },\n  {\n    name: 'First Name',\n    selector: 'first_name',\n  },\n  {\n    name: 'Last Name',\n    selector: 'last_name',\n  },\n  {\n    name: 'Email',\n    selector: 'email',\n  }\n];\n*/}\n\n \nfunction MeetingsListPage() {\n\n  const authHeader = useAuthHeader();\n  const [meetingLoader, setMeetingsLoader] = useState(false);\n  const [meetings, setMeetings] = useState([]);\n  const [page, setPage] = useState(1);\n  const countPerPage = 12;\n\n  const columns = React.useMemo(() => [\n      { name: \"ID\", selector: \"id\", sortable: true },\n      { name: \"CreatedDate\", selector: \"createdDate\", sortable: true },\n      { name: \"CreatedTime\", selector: \"createdTime\", sortable: true },\n      { name: \"MeetingWithCustomer\", selector: \"MeetingWithCustomer\", sortable: true },\n      { name: \"MeetingLocation\", selector: \"MeetingLocation\", sortable: true },\n      { name: \"MeetingType\", selector: \"MeetingType\", sortable: true },\n      { name: \"MeetingTitle\", selector: \"MeetingTitle\", sortable: true }\n  \n], []);\n\n  useEffect(() => {\n    fetchMeetingData();\n  }, [page]);\n\n  \n  async function fetchMeetingData() {\n    setMeetingsLoader(true);\n    let postData = {\n      test: null,\n      start_date: '2022-02-01T00:00:00.000Z',\n      end_date: '2022-02-28T00:00:00.000Z'\n    };\n\n    try {\n      setMeetingsLoader(true);\n      const res = await axios.post(API_ENDPOINT + \"orgzit/meetinglist\", postData, { headers: { Authorization: authHeader() } });\n      setMeetingsLoader(false);\n      setMeetings(res.data.data);\n    } catch (error) {\n      //console.error(\"error \", error);\n      setMeetingsLoader(false);\n    }\n\n  }\n \n  useEffect(() => {\n    fetchMeetingData();\n  }, [page]);\n \n  return (\n    <div className=\"App\">\n      \n      <DataTable\n        title=\"Employees\"\n        columns={columns}\n        data={meetings}\n        highlightOnHover\n        pagination\n        paginationServer\n        paginationTotalRows={meetings.total}\n        paginationPerPage={countPerPage}\n        paginationComponentOptions={{\n          noRowsPerPage: true\n        }}\n        onChangePage={page => setPage(page)}\n      />\n    </div>\n  );\n}\n \nexport default MeetingsListPage;"]},"metadata":{},"sourceType":"module"}