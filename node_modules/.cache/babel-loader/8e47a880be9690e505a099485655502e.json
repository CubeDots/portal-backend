{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal-backend/src/components/pdf/AllPages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet publicPath = process.env.PUBLIC_URL;\npdfjs.GlobalWorkerOptions.workerSrc = publicPath + '/assets/js/pdf.worker.js';\nexport default function AllPages(props) {\n  _s();\n\n  const [numPages, setNumPages] = useState(null);\n\n  function onDocumentLoadSuccess(_ref) {\n    let {\n      numPages\n    } = _ref;\n    setNumPages(numPages);\n  }\n\n  const {\n    pdf\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Document, {\n    file: pdf,\n    onLoadSuccess: onDocumentLoadSuccess,\n    children: Array.from(new Array(numPages), (el, index) => /*#__PURE__*/_jsxDEV(Page, {\n      pageNumber: index + 1,\n      className: \"custom_pdf\",\n      scale: 0.5\n    }, `page_${index + 1}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllPages, \"AwOvOa2rmCCPJU+WISEfnKBF6Zg=\");\n\n_c = AllPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPages\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal-backend/src/components/pdf/AllPages.js"],"names":["React","useState","Document","Page","pdfjs","publicPath","process","env","PUBLIC_URL","GlobalWorkerOptions","workerSrc","AllPages","props","numPages","setNumPages","onDocumentLoadSuccess","pdf","Array","from","el","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,WAAtC;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA7B;AACAJ,KAAK,CAACK,mBAAN,CAA0BC,SAA1B,GAAsCL,UAAU,GAAC,0BAAjD;AAEA,eAAe,SAASM,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;;AACA,WAASc,qBAAT,OAA6C;AAAA,QAAd;AAAEF,MAAAA;AAAF,KAAc;AAC3CC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AAED,QAAM;AAAEG,IAAAA;AAAF,MAAUJ,KAAhB;AAGA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAEI,GADR;AAEE,IAAA,aAAa,EAAED,qBAFjB;AAAA,cAIGE,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAUJ,QAAV,CAAX,EAAgC,CAACM,EAAD,EAAKC,KAAL,kBAC/B,QAAC,IAAD;AAAgC,MAAA,UAAU,EAAEA,KAAK,GAAG,CAApD;AAAwD,MAAA,SAAS,EAAC,YAAlE;AAA+E,MAAA,KAAK,EAAE;AAAtF,OAAY,QAAOA,KAAK,GAAG,CAAE,EAA7B;AAAA;AAAA;AAAA;AAAA,YADD;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnBuBT,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nlet publicPath = process.env.PUBLIC_URL;\npdfjs.GlobalWorkerOptions.workerSrc = publicPath+'/assets/js/pdf.worker.js';\n\nexport default function AllPages(props) {\n  const [numPages, setNumPages] = useState(null);\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  const { pdf } = props;\n\n\n  return (\n    <Document\n      file={pdf}\n      onLoadSuccess={onDocumentLoadSuccess}\n    >\n      {Array.from(new Array(numPages), (el, index) => (\n        <Page key={`page_${index + 1}`} pageNumber={index + 1}  className=\"custom_pdf\" scale={0.5}  />\n      ))}\n    </Document>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}