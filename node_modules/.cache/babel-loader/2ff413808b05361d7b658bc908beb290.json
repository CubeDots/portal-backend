{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/UpdatePasswordModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated, useAuthHeader } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\nimport { API_ENDPOINT } from \"../common/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UpdatePasswordModal(props) {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const authHeader = useAuthHeader();\n  const isAuthenticated = useIsAuthenticated();\n  const navigate = useNavigate();\n  const signIn = useSignIn();\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const [loading, setLoading] = React.useState(false);\n  const [formData, setFormData] = React.useState({\n    old_password: '',\n    password: '',\n    password_confirmation: ''\n  });\n  const [formErrors, setFormErrors] = React.useState('');\n  const [formValidationErrors, setFormValidationErrors] = React.useState({}); // if (isAuthenticated()) {\n  //     // Redirect to dashboard\n  //     console.log(\"valid Redirect to dashboard\");\n  //     return (\n  //         <Navigate to=\"/dash\" replace />\n  //     );\n  // }\n\n  useEffect(() => {\n    if (props.isForgotPasswordModalShow) {\n      handleShow();\n    }\n\n    if (!show) {\n      props.handleChane();\n    }\n  }, [props, show]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    axios.post(API_ENDPOINT + \"auth/updatePassword\", formData, {\n      headers: {\n        Authorization: authHeader()\n      }\n    }).then(res => {\n      console.log('login res', res.status, res.data);\n\n      if (res.status === 200) {\n        setFormErrors(res.data.message);\n        setFormData(fd => ({ ...fd,\n          old_password: '',\n          password: '',\n          password_confirmation: ''\n        }));\n        setTimeout(() => {\n          setFormErrors('');\n          handleClose();\n        }, 5000);\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error.response);\n\n      if (error.response.status === 422) {\n        console.log(\"errors data \", error.response.data.errors); //let errorm = error.response.data.errors[0];\n\n        console.log(\"error \\n\", error.response.data.message);\n        setFormValidationErrors(error.response.data.errors);\n        setFormErrors(error.response.data.message);\n        setTimeout(() => {\n          setFormValidationErrors({});\n          setFormErrors('');\n        }, 5000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      className: \"forgot-password\",\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Type and confirm a secur new password for the account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [formErrors ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: formValidationErrors.length ? 'text-danger' : 'text-success',\n                children: formErrors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: formValidationErrors && Object.keys(formValidationErrors).map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"text-danger\",\n                  children: formValidationErrors[error][0]\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"old_password\",\n                placeholder: \"Old Password\",\n                value: formData.old_password,\n                onChange: e => setFormData({ ...formData,\n                  old_password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"password\",\n                placeholder: \"New Password\",\n                value: formData.password,\n                onChange: e => setFormData({ ...formData,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"password_confirmation\",\n                placeholder: \"Confirm Password\",\n                value: formData.password_confirmation,\n                onChange: e => setFormData({ ...formData,\n                  password_confirmation: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"button\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this), \"  Submitting...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(UpdatePasswordModal, \"BZ+f1RrAOXehcQ5tw79R1VgFnRE=\", false, function () {\n  return [useAuthHeader, useIsAuthenticated, useNavigate, useSignIn];\n});\n\n_c = UpdatePasswordModal;\nexport default UpdatePasswordModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePasswordModal\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/UpdatePasswordModal.js"],"names":["React","useEffect","useNavigate","axios","Spinner","useSignIn","useIsAuthenticated","useAuthHeader","Modal","API_ENDPOINT","UpdatePasswordModal","props","publicPath","process","env","PUBLIC_URL","authHeader","isAuthenticated","navigate","signIn","show","setShow","useState","handleClose","handleShow","loading","setLoading","formData","setFormData","old_password","password","password_confirmation","formErrors","setFormErrors","formValidationErrors","setFormValidationErrors","isForgotPasswordModalShow","handleChane","onSubmit","e","preventDefault","post","headers","Authorization","then","res","console","log","status","data","message","fd","setTimeout","catch","error","response","errors","length","Object","keys","map","index","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { useNavigate} from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated, useAuthHeader } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\n\nimport { API_ENDPOINT } from \"../common/Constants\";\n\nfunction UpdatePasswordModal(props) {\n    let publicPath = process.env.PUBLIC_URL;\n    const authHeader = useAuthHeader();\n    const isAuthenticated = useIsAuthenticated();\n    const navigate = useNavigate();\n    const signIn = useSignIn();\n\n    const [show, setShow] = React.useState(false);\n\n    const handleClose = () => { setShow(false); }\n    const handleShow = () => setShow(true);\n\n    const [loading, setLoading] = React.useState(false);\n    const [formData, setFormData] = React.useState({ old_password: '', password: '', password_confirmation: '' });\n    const [formErrors, setFormErrors] = React.useState('');\n    const [formValidationErrors, setFormValidationErrors] = React.useState({});\n\n    // if (isAuthenticated()) {\n    //     // Redirect to dashboard\n    //     console.log(\"valid Redirect to dashboard\");\n    //     return (\n    //         <Navigate to=\"/dash\" replace />\n    //     );\n    // }\n    useEffect(() => {\n        if (props.isForgotPasswordModalShow) {\n            handleShow();\n        }\n        if (!show) {\n            props.handleChane();\n        }\n    }, [props, show])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setLoading(true);\n        axios.post(API_ENDPOINT + \"auth/updatePassword\", formData, { headers: { Authorization: authHeader() } })\n            .then((res) => {\n                console.log('login res', res.status, res.data)\n                if (res.status === 200) {\n                    setFormErrors(res.data.message);\n                    setFormData(fd => ({ ...fd, old_password: '', password: '', password_confirmation: '' }));\n                    setTimeout(() => {\n                        setFormErrors('');\n                        handleClose();\n                    }, 5000);\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error.response);\n                if (error.response.status === 422) {\n                    console.log(\"errors data \", error.response.data.errors);\n                    //let errorm = error.response.data.errors[0];\n                    console.log(\"error \\n\", error.response.data.message)\n                    setFormValidationErrors(error.response.data.errors);\n                    setFormErrors(error.response.data.message);\n                    setTimeout(() => {\n                        setFormValidationErrors({});\n                        setFormErrors('');\n                    }, 5000);\n                }\n            })\n    }\n\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose} className=\"forgot-password\" backdrop=\"static\" keyboard={false} centered>\n                <Modal.Header closeButton>\n                <Modal.Title>Update Password</Modal.Title>\n                </Modal.Header>\n                <div className='modal-body'>\n                    <div className='px-3'>\n                        <p>Type and confirm a secur new password for the account</p>\n                        <form onSubmit={onSubmit}>\n                            <div className=\"mb-3\">\n\n                                {formErrors ?\n                                    <p className={formValidationErrors.length ? 'text-danger' : 'text-success'}>{formErrors}</p>\n                                    : ''}\n                                <ul className=\"list-unstyled\">\n                                    {formValidationErrors && Object.keys(formValidationErrors).map((error, index) => (\n                                        <li className=\"text-danger\" key={index}>{formValidationErrors[error][0]}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"mb-3\">\n                                <input type=\"password\" className=\"form-control\" name=\"old_password\" placeholder='Old Password' value={formData.old_password} onChange={(e) => setFormData({ ...formData, old_password: e.target.value })} />\n                            </div>\n                            <div className=\"mb-3\">\n                                <input type=\"password\" className=\"form-control\" name=\"password\" placeholder='New Password' value={formData.password} onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n                            </div>\n                            <div className=\"mb-3\">\n                                <input type=\"password\" className=\"form-control\" name=\"password_confirmation\" placeholder='Confirm Password' value={formData.password_confirmation} onChange={(e) => setFormData({ ...formData, password_confirmation: e.target.value })} />\n                            </div>\n\n                            {loading ?\n                                <button className=\"btn btn-primary\" type=\"button\" disabled >\n                                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                                </button>\n                                :\n                                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                            }\n\n                        </form>\n                    </div>\n                </div>\n\n            </Modal>\n        </>\n    );\n}\n\nexport default UpdatePasswordModal;"]},"metadata":{},"sourceType":"module"}