{"ast":null,"code":"var _jsxFileName = \"/var/www/html/new_cubedots_portal/src/components/home/HomeVideoComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactPlayer from 'react-player';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomeVideoComponent() {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const [homevideoLoading, setHomeVideoLoading] = useState(false);\n  const [homevideo, setHomeVideo] = useState([]);\n\n  async function fetchHomeVideo() {\n    setHomeVideoLoading(true);\n\n    try {\n      const res = await axios.get(publicPath + \"/assets/data/homeVideo.json\");\n\n      if (res.data) {\n        setHomeVideoLoading(false);\n        setHomeVideo(res.data);\n      }\n    } catch (error) {\n      console.error(\"error \", error);\n      setHomeVideoLoading(false);\n    }\n  }\n\n  const [isAutoPlay, setIsAutoPlay] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsAutoPlay(true);\n    }, 1000);\n    fetchHomeVideo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 bannerSlider\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"carouselExampleControls\",\n          interval: \"10000\",\n          \"data-bs-interval\": \"false\",\n          className: \"carousel slide\",\n          \"data-bs-ride\": \"carousel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-inner \",\n            children: homevideo.length > 0 && homevideo.map((items, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: i === 0 ? 'carousel-item active' : 'carousel-item',\n              children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                playsinline: true,\n                url: publicPath + items.Videourl,\n                muted: true,\n                playing: true,\n                loop: true,\n                width: \"100%\",\n                height: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(HomeVideoComponent, \"ULTavEnxHdH6TLtuQCojR4/wIBQ=\");\n\n_c = HomeVideoComponent;\nexport default HomeVideoComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeVideoComponent\");","map":{"version":3,"sources":["/var/www/html/new_cubedots_portal/src/components/home/HomeVideoComponent.js"],"names":["React","useEffect","useState","ReactPlayer","axios","HomeVideoComponent","publicPath","process","env","PUBLIC_URL","homevideoLoading","setHomeVideoLoading","homevideo","setHomeVideo","fetchHomeVideo","res","get","data","error","console","isAutoPlay","setIsAutoPlay","setTimeout","length","map","items","i","Videourl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC1B,MAAIC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA7B;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeY,cAAf,GAAgC;AAC5BH,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;;AACA,QAAI;AACA,YAAMI,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUV,UAAU,GAAG,6BAAvB,CAAlB;;AACA,UAAIS,GAAG,CAACE,IAAR,EAAc;AACVN,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAE,QAAAA,YAAY,CAACE,GAAG,CAACE,IAAL,CAAZ;AACH;AACJ,KAND,CAME,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAP,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ;;AAED,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAFS,EAEP,IAFO,CAAV;AAGAP,IAAAA,cAAc;AACjB,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,+BACI;AAAK,UAAA,EAAE,EAAC,yBAAR;AAAkC,UAAA,QAAQ,EAAC,OAA3C;AAAmD,8BAAiB,OAApE;AAA4E,UAAA,SAAS,EAAC,gBAAtF;AAAuG,0BAAa,UAApH;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBACKF,SAAS,CAACW,MAAV,GAAmB,CAAnB,IAAwBX,SAAS,CAACY,GAAV,CAAc,CAACC,KAAD,EAAQC,CAAR,kBACnC;AAAK,cAAA,SAAS,EAAEA,CAAC,KAAK,CAAN,GAAU,sBAAV,GAAmC,eAAnD;AAAA,qCAQI,QAAC,WAAD;AAAa,gBAAA,WAAW,EAAE,IAA1B;AAAgC,gBAAA,GAAG,EAAEpB,UAAU,GAAGmB,KAAK,CAACE,QAAxD;AAAkE,gBAAA,KAAK,EAAE,IAAzE;AAA+E,gBAAA,OAAO,EAAE,IAAxF;AAA8F,gBAAA,IAAI,EAAE,IAApG;AAA0G,gBAAA,KAAK,EAAC,MAAhH;AAAuH,gBAAA,MAAM,EAAC;AAA9H;AAAA;AAAA;AAAA;AAAA;AARJ,eAAyED,CAAzE;AAAA;AAAA;AAAA;AAAA,oBADqB;AAD7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwCH;;GAnEQrB,kB;;KAAAA,kB;AAoET,eAAeA,kBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactPlayer from 'react-player';\nimport axios from \"axios\";\n\nfunction HomeVideoComponent() {\n    let publicPath = process.env.PUBLIC_URL;\n    const [homevideoLoading, setHomeVideoLoading] = useState(false);\n    const [homevideo, setHomeVideo] = useState([]);\n\n    async function fetchHomeVideo() {\n        setHomeVideoLoading(true);\n        try {\n            const res = await axios.get(publicPath + \"/assets/data/homeVideo.json\");\n            if (res.data) {\n                setHomeVideoLoading(false);\n                setHomeVideo(res.data);\n            }\n        } catch (error) {\n            console.error(\"error \", error);\n            setHomeVideoLoading(false);\n        }\n    }\n\n    const [isAutoPlay, setIsAutoPlay] = useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            setIsAutoPlay(true);\n        }, 1000)\n        fetchHomeVideo();\n    }, []);\n\n    return (\n        <>\n            <div className=\"col-md-6 bannerSlider\">\n                <div className=\"\">\n                    <div id=\"carouselExampleControls\" interval=\"10000\" data-bs-interval=\"false\" className=\"carousel slide\" data-bs-ride=\"carousel\">\n                        <div className=\"carousel-inner \">\n                            {homevideo.length > 0 && homevideo.map((items, i) =>\n                                <div className={i === 0 ? 'carousel-item active' : 'carousel-item'} key={i}>\n                                    {/* <Player\n                                        fluid={true} autoPlay={true}\n                                        playsInline\n                                        src={publicPath + items.Videourl}>\n                                        <BigPlayButton position=\"center\" />\n                                        <ControlBar disableCompletely={true} />\n                                    </Player> */}\n                                    <ReactPlayer playsinline={true} url={publicPath + items.Videourl} muted={true} playing={true} loop={true} width='100%' height='100%' />\n                                    {/* <ResponsivePlayer url={publicPath + items.Videourl} playing={true} /> */}\n                                </div>\n                            )\n                            }\n                        </div>\n                        {/* <div className=\"carouselNav\">\n                            <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"prev\">\n                                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\">\n                                    <img alt=\"\" src={publicPath + \"/assets/images/left.svg\"} />\n                                </span>\n                                <span className=\"visually-hidden\">Previous</span>\n                            </button>\n                            <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"next\">\n                                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\">\n                                    <img alt=\"\" src={publicPath + \"/assets/images/right.svg\"} />\n                                </span>\n                                <span className=\"visually-hidden\">Next</span>\n                            </button>\n                        </div> */}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default HomeVideoComponent;"]},"metadata":{},"sourceType":"module"}