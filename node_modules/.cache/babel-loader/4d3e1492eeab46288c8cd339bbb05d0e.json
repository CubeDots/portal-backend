{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation, Navigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { API_ENDPOINT } from '../common/Constants';\nimport ForgotPasswordModal from './ForgotPasswordModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginModal(props) {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const isAuthenticated = useIsAuthenticated();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const signIn = useSignIn();\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const [loading, setLoading] = React.useState(false);\n  const [formData, setFormData] = React.useState({\n    email: '',\n    password: '',\n    rememberMe: false\n  });\n  const [formErrors, setFormErrors] = React.useState('');\n  const [formValidationErrors, setFormValidationErrors] = React.useState({}); //forgot password\n\n  const [isForgotPasswordModalShow, setisForgotPasswordModalShow] = React.useState(false);\n\n  const openForgotPasswordModal = () => {\n    console.log('openForgotPasswordModal click manually');\n    handleClose();\n    setTimeout(() => {\n      setisForgotPasswordModalShow(true);\n    }, 300);\n  };\n\n  const closeForgotPasswordModal = () => {\n    console.log('closeForgotPasswordModal trigger');\n    setisForgotPasswordModalShow(false); // handleShow();\n\n    setTimeout(() => {\n      handleShow();\n    }, 300);\n  }; // if (isAuthenticated()) {\n  //     // Redirect to dashboard\n  //     console.log(\"valid Redirect to dashboard\");\n  //     return (\n  //         <Navigate to=\"/dash\" replace />\n  //     );\n  // }\n\n\n  const getLoginData = () => {\n    return sessionStorage.getItem(\"loginData\") || null;\n  };\n\n  const setLoginData = value => {\n    if (value) sessionStorage.setItem(\"loginData\", value);else sessionStorage.removeItem(\"loginData\");\n  };\n\n  useEffect(() => {}, []);\n  useEffect(() => {\n    if (props.isLoginModalShow) {\n      handleShow();\n    }\n\n    if (!show) {\n      props.handleChane();\n    }\n\n    console.log(\"location #### \", location.pathname);\n  }, [props, show]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (formData.rememberMe) {\n      setLoginData(formData);\n    } else {\n      setLoginData(null);\n    }\n\n    axios.post(API_ENDPOINT + 'auth', formData).then(res => {\n      console.log('login res', res.status, res.data);\n\n      if (res.status === 200) {\n        setLoading(false);\n\n        if (signIn({\n          token: res.data.data.token,\n          expiresIn: res.data.data.expires_at,\n          tokenType: \"Bearer\",\n          authState: {\n            user: res.data.data.user\n          } //    refreshToken: res.data.refreshToken, // Only if you are using refreshToken feature\n          //    refreshTokenExpireIn: res.data.refreshTokenExpireIn\n\n        })) {\n          // Only if you are using refreshToken feature\n          // Redirect or do-something\n          handleClose();\n          console.log(\"location.pathname \", location.pathname);\n          if (location.pathname === '/') navigate(\"/dash\");else navigate(location.pathname);\n        } else {//Throw error\n          //alert(\"Errors \\n\"+res.errors[0])\n        }\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error.response);\n\n      if (error.response.status === 422) {\n        console.log(\"errors data \", error.response.data.errors); //let errorm = error.response.data.errors[0];\n\n        console.log(\"error \\n\", error.response.data.message);\n        setFormValidationErrors(error.response.data.errors);\n        setFormErrors(error.response.data.message);\n        setTimeout(() => {\n          setFormValidationErrors({});\n          setFormErrors('');\n        }, 5000);\n      }\n    });\n  };\n\n  const handleCheckbox = e => {\n    setFormData(formData => ({ ...formData,\n      rememberMe: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      className: \"SignIn\",\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signInBox\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signinImg\",\n            children: /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n              effect: \"blur\" // src={publicPath + \"/assets/images/2.webp\"} \n              ,\n              src: publicPath + \"/assets/images/loginpage/loginbanner.jpg\",\n              className: \"img-fluid w-100\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SignInFrom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Welcome back to CuEngine \\u2013 Cubedots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-unstyled\",\n                  children: formValidationErrors && Object.keys(formValidationErrors).map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"text-danger\",\n                    children: formValidationErrors[error][0]\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Email Address\",\n                  onChange: e => setFormData({ ...formData,\n                    email: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  onChange: e => setFormData({ ...formData,\n                    password: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"form-check-input\",\n                    id: \"rememberMe\",\n                    name: \"checkbox\",\n                    checked: formData.rememberMe,\n                    onChange: event => handleCheckbox(event) // required\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: \"rememberMe\",\n                    children: \"Remember me\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"button\",\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  as: \"span\",\n                  animation: \"border\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 41\n                }, this), \"  Submitting...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"my-3 text-center\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"\",\n                  className: \"form-check-label\",\n                  onClick: openForgotPasswordModal,\n                  children: \"Forgot your password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), isForgotPasswordModalShow ? /*#__PURE__*/_jsxDEV(ForgotPasswordModal, {\n      handleChanel: closeForgotPasswordModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true);\n}\n\n_s(LoginModal, \"pfnNY8eUrDP8IIorH4bTsz2ISAs=\", false, function () {\n  return [useIsAuthenticated, useNavigate, useLocation, useSignIn];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/LoginModal.js"],"names":["React","useEffect","useNavigate","useLocation","Navigate","Link","axios","Spinner","useSignIn","useIsAuthenticated","Modal","LazyLoadImage","API_ENDPOINT","ForgotPasswordModal","LoginModal","props","publicPath","process","env","PUBLIC_URL","isAuthenticated","navigate","location","signIn","show","setShow","useState","handleClose","handleShow","loading","setLoading","formData","setFormData","email","password","rememberMe","formErrors","setFormErrors","formValidationErrors","setFormValidationErrors","isForgotPasswordModalShow","setisForgotPasswordModalShow","openForgotPasswordModal","console","log","setTimeout","closeForgotPasswordModal","getLoginData","sessionStorage","getItem","setLoginData","value","setItem","removeItem","isLoginModalShow","handleChane","pathname","onSubmit","e","preventDefault","post","then","res","status","data","token","expiresIn","expires_at","tokenType","authState","user","catch","error","response","errors","message","handleCheckbox","target","Object","keys","map","index","event"],"mappings":"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","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation, Navigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useSignIn, useIsAuthenticated } from 'react-auth-kit';\nimport Modal from 'react-bootstrap/Modal';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nimport { API_ENDPOINT } from '../common/Constants';\n\nimport ForgotPasswordModal from './ForgotPasswordModal';\n\n\n\nfunction LoginModal(props) {\n    let publicPath = process.env.PUBLIC_URL;\n\n    const isAuthenticated = useIsAuthenticated();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const signIn = useSignIn();\n\n    const [show, setShow] = React.useState(false);\n    const handleClose = () => { setShow(false); }\n    const handleShow = () => setShow(true);\n\n    const [loading, setLoading] = React.useState(false);\n    const [formData, setFormData] = React.useState({ email: '', password: '', rememberMe: false });\n    const [formErrors, setFormErrors] = React.useState('');\n    const [formValidationErrors, setFormValidationErrors] = React.useState({});\n\n    //forgot password\n\n    const [isForgotPasswordModalShow, setisForgotPasswordModalShow] = React.useState(false);\n\n    const openForgotPasswordModal = () => {\n        console.log('openForgotPasswordModal click manually');\n        handleClose();\n        setTimeout(() => {\n            setisForgotPasswordModalShow(true);\n        }, 300);\n\n    };\n    const closeForgotPasswordModal = () => {\n        console.log('closeForgotPasswordModal trigger');\n        setisForgotPasswordModalShow(false);\n        // handleShow();\n        setTimeout(() => {\n            handleShow();\n        }, 300);\n    };\n\n\n    // if (isAuthenticated()) {\n    //     // Redirect to dashboard\n    //     console.log(\"valid Redirect to dashboard\");\n    //     return (\n    //         <Navigate to=\"/dash\" replace />\n    //     );\n    // }\n\n    const getLoginData = () => {\n        return sessionStorage.getItem(\"loginData\") || null;\n    };\n\n    const setLoginData = (value) => {\n        if(value)\n        sessionStorage.setItem(\"loginData\", value);\n        else\n        sessionStorage.removeItem(\"loginData\");\n    };\n\n    useEffect(() => {\n\n    }, []);\n    useEffect(() => {\n        if (props.isLoginModalShow) {\n            handleShow();\n        }\n        if (!show) {\n            props.handleChane();\n        }\n\n        console.log(\"location #### \", location.pathname);\n    }, [props, show])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setLoading(true);\n        if(formData.rememberMe){\n            setLoginData(formData);\n        }else{\n            setLoginData(null);\n        }\n        axios.post(API_ENDPOINT + 'auth', formData)\n            .then((res) => {\n                console.log('login res', res.status, res.data)\n                if (res.status === 200) {\n                    setLoading(false);\n                    if (signIn({\n                        token: res.data.data.token,\n                        expiresIn: res.data.data.expires_at,\n                        tokenType: \"Bearer\",\n                        authState: { user: res.data.data.user },\n                        //    refreshToken: res.data.refreshToken, // Only if you are using refreshToken feature\n                        //    refreshTokenExpireIn: res.data.refreshTokenExpireIn\n                    })) { // Only if you are using refreshToken feature\n                        // Redirect or do-something\n                        handleClose();\n                        console.log(\"location.pathname \", location.pathname);\n                        if (location.pathname === '/')\n                            navigate(\"/dash\");\n                        else\n                            navigate(location.pathname);\n\n                    } else {\n                        //Throw error\n                        //alert(\"Errors \\n\"+res.errors[0])\n\n                    }\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error.response);\n                if (error.response.status === 422) {\n                    console.log(\"errors data \", error.response.data.errors);\n                    //let errorm = error.response.data.errors[0];\n                    console.log(\"error \\n\", error.response.data.message)\n                    setFormValidationErrors(error.response.data.errors);\n                    setFormErrors(error.response.data.message);\n                    setTimeout(() => {\n                        setFormValidationErrors({});\n                        setFormErrors('');\n                    }, 5000);\n                }\n            })\n    }\n\n\n    const handleCheckbox = (e) => {\n        setFormData(formData => ({ ...formData, rememberMe: e.target.value }));\n    }\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose} className=\"SignIn\" centered>\n\n                {/* <div className=\"modal fade SignIn\" id=\"SignIn\" tabIndex=\"-1\" aria-labelledby=\"SignInLabel\" aria-hidden=\"true\"> */}\n                {/* <div className=\"modal-dialog modal-dialog-centered\">\n                    <div className=\"modal-content\"> */}\n                <div className=\"signInBox\">\n                    <Modal.Header closeButton>\n                    </Modal.Header>\n                    <div className=\"modal-body\">\n                        <div className='signinImg'>\n                            <LazyLoadImage\n                                effect=\"blur\"\n                                // src={publicPath + \"/assets/images/2.webp\"} \n                                src={publicPath + \"/assets/images/loginpage/loginbanner.jpg\"}\n\n                                className=\"img-fluid w-100\"\n                                alt=\"\" />\n                            {/* <img src={publicPath + \"/assets/images/2.webp\"} className='img-fluid' alt='' /> */}\n                        </div>\n                        <div className='SignInFrom'>\n                            <h2>Sign in</h2>\n                            <p>Welcome back to CuEngine – Cubedots</p>\n                            <form onSubmit={onSubmit}>\n                                <div className=\"mb-3\">\n                                    {/* {loading ? 'loading...' : ''} */}\n                                    {/* {formErrors} */}\n                                    <ul className=\"list-unstyled\">\n                                        {formValidationErrors && Object.keys(formValidationErrors).map((error, index) => (\n                                            <li className=\"text-danger\" key={index}>{formValidationErrors[error][0]}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email Address\" onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" placeholder='Password' onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n                                </div>\n\n                                <div className=\"mb-3\">\n\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"form-check-input\"\n                                            id=\"rememberMe\"\n                                            name=\"checkbox\"\n                                            checked={formData.rememberMe}\n                                            onChange={(event) => handleCheckbox(event)}\n                                        // required\n                                        />\n                                        <label className=\"form-check-label\" htmlFor=\"rememberMe\">\n                                            Remember me\n                                        </label>\n                                    </div>\n                                </div>\n\n                                {loading ?\n                                    <button className=\"btn btn-primary\" type=\"button\" disabled >\n                                        <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                                    </button>\n                                    :\n                                    <button className=\"btn btn-primary\" type=\"submit\">Login</button>\n                                }\n\n\n                                <div className=\"my-3 text-center\">\n                                    <Link to=\"\" className=\"form-check-label\" onClick={openForgotPasswordModal}>Forgot your password?</Link>\n                                </div>\n                            </form>\n\n                        </div>\n\n                    </div>\n                    {/* </div>\n                </div> */}\n                    {/* </div> */}\n                </div>\n\n            </Modal>\n            {isForgotPasswordModalShow ? (\n                <ForgotPasswordModal handleChanel={closeForgotPasswordModal} />\n            ) : ''}\n\n        </>\n    );\n}\n\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}