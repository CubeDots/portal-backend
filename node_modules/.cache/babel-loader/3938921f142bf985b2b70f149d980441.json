{"ast":null,"code":"var _jsxFileName = \"/var/www/html/cuengine-portal/src/components/ContactFormComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContactFormComponent() {\n  _s();\n\n  let publicPath = process.env.PUBLIC_URL;\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n  });\n  const [formErrors, setFormErrors] = useState('');\n  const [formValidationErrors, setFormValidationErrors] = useState({});\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    axios.post('http://staging.cuengine.com/api/v7/auth', formData).then(res => {\n      console.log('login res', res.status, res.data);\n\n      if (res.status === 200) {\n        setLoading(false);\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"errors ### \", error.response);\n\n      if (error.response.status === 422) {\n        console.log(\"errors data \", error.response.data.errors); //let errorm = error.response.data.errors[0];\n\n        console.log(\"error \\n\", error.response.data.message);\n        setFormValidationErrors(error.response.data.errors);\n        setFormErrors(error.response.data.message);\n        setTimeout(() => {\n          setFormValidationErrors({});\n          setFormErrors('');\n        }, 5000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-* mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Name\",\n            name: \"name\",\n            onChange: e => setFormData({ ...formData,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-* mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            placeholder: \"Email Address\",\n            name: \"email\",\n            onChange: e => setFormData({ ...formData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-* mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Phone No.\",\n            name: \"phone\",\n            onChange: e => setFormData({ ...formData,\n              phone: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-* mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            placeholder: \"Message\",\n            name: \"message\",\n            onChange: e => setFormData({ ...formData,\n              message: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            as: \"span\",\n            animation: \"border\",\n            size: \"sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), \"  Submitting...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContactFormComponent, \"3tegpR7+mtPPgSxjZDXr8LPciJk=\");\n\n_c = ContactFormComponent;\nexport default ContactFormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactFormComponent\");","map":{"version":3,"sources":["/var/www/html/cuengine-portal/src/components/ContactFormComponent.js"],"names":["useEffect","useState","axios","Spinner","ContactFormComponent","publicPath","process","env","PUBLIC_URL","loading","setLoading","formData","setFormData","name","email","phone","message","formErrors","setFormErrors","formValidationErrors","setFormValidationErrors","onSubmit","e","preventDefault","post","then","res","console","log","status","data","catch","error","response","errors","setTimeout","target","value"],"mappings":";;;AACA,SAASA,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;;AAEA,SAASC,oBAAT,GAAgC;AAAA;;AAE5B,MAAIC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA7B;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,KAAK,EAAE,EAA9B;AAAkCC,IAAAA,OAAO,EAAE;AAA3C,GAAD,CAAxC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,oBAAD,EAAuBC,uBAAvB,IAAkDnB,QAAQ,CAAC,EAAD,CAAhE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAEAb,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAR,IAAAA,KAAK,CAACsB,IAAN,CAAW,yCAAX,EAAsDb,QAAtD,EACKc,IADL,CACWC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAG,CAACG,MAA7B,EAAqCH,GAAG,CAACI,IAAzC;;AACA,UAAIJ,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACpBnB,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEH;AACJ,KAPL,EAOOqB,KAPP,CAOcC,KAAD,IAAW;AAChBtB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,KAAK,CAACC,QAAjC;;AACA,UAAID,KAAK,CAACC,QAAN,CAAeJ,MAAf,KAA0B,GAA9B,EAAmC;AAC/BF,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BI,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,MAAhD,EAD+B,CAE/B;;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBd,OAA5C;AACAI,QAAAA,uBAAuB,CAACY,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,MAArB,CAAvB;AACAhB,QAAAA,aAAa,CAACc,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBd,OAArB,CAAb;AACAmB,QAAAA,UAAU,CAAC,MAAM;AACbf,UAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAF,UAAAA,aAAa,CAAC,EAAD,CAAb;AACH,SAHS,EAGP,IAHO,CAAV;AAIH;AACJ,KArBL;AAsBH,GA3BD;;AA8BA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEG,QAAhB;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,cAA7B;AAA4C,YAAA,WAAW,EAAC,MAAxD;AAA+D,YAAA,IAAI,EAAC,MAApE;AAA2E,YAAA,QAAQ,EAAGC,CAAD,IAAOV,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,cAAAA,IAAI,EAAES,CAAC,CAACc,MAAF,CAASC;AAA9B,aAAD;AAAvG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,SAAS,EAAC,cAA9B;AAA6C,YAAA,WAAW,EAAC,eAAzD;AAAyE,YAAA,IAAI,EAAC,OAA9E;AAAsF,YAAA,QAAQ,EAAGf,CAAD,IAAOV,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,cAAAA,KAAK,EAAEQ,CAAC,CAACc,MAAF,CAASC;AAA/B,aAAD;AAAlH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,cAA7B;AAA4C,YAAA,WAAW,EAAC,WAAxD;AAAoE,YAAA,IAAI,EAAC,OAAzE;AAAiF,YAAA,QAAQ,EAAGf,CAAD,IAAOV,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,cAAAA,KAAK,EAAEO,CAAC,CAACc,MAAF,CAASC;AAA/B,aAAD;AAA7G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAU,YAAA,SAAS,EAAC,cAApB;AAAmC,YAAA,WAAW,EAAC,SAA/C;AAAyD,YAAA,IAAI,EAAC,SAA9D;AAAwE,YAAA,QAAQ,EAAGf,CAAD,IAAOV,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,cAAAA,OAAO,EAAEM,CAAC,CAACc,MAAF,CAASC;AAAjC,aAAD;AAApG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAcK5B,OAAO,gBACJ;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAkD,UAAA,QAAQ,MAA1D;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,QAA7B;AAAsC,YAAA,IAAI,EAAC,IAA3C;AAAgD,YAAA,IAAI,EAAC,QAArD;AAA8D,2BAAY;AAA1E;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,gBAKJ;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6BH;;GAxEQL,oB;;KAAAA,oB;AA0ET,eAAeA,oBAAf","sourcesContent":["\nimport { useEffect,useState } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction ContactFormComponent() {\n\n    let publicPath = process.env.PUBLIC_URL;\n\n    const [loading, setLoading] = useState(false);\n    const [formData, setFormData] = useState({ name: '', email: '', phone: '', message: '' });\n    const [formErrors, setFormErrors] = useState('');\n    const [formValidationErrors, setFormValidationErrors] = useState({});\n\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        setLoading(true);\n\n        axios.post('http://staging.cuengine.com/api/v7/auth', formData)\n            .then((res) => {\n                console.log('login res', res.status, res.data)\n                if (res.status === 200) {\n                    setLoading(false);\n\n                }\n            }).catch((error) => {\n                setLoading(false);\n                console.log(\"errors ### \", error.response);\n                if (error.response.status === 422) {\n                    console.log(\"errors data \", error.response.data.errors);\n                    //let errorm = error.response.data.errors[0];\n                    console.log(\"error \\n\", error.response.data.message)\n                    setFormValidationErrors(error.response.data.errors);\n                    setFormErrors(error.response.data.message);\n                    setTimeout(() => {\n                        setFormValidationErrors({});\n                        setFormErrors('');\n                    }, 5000);\n                }\n            })\n    }\n\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n\n                <div className=\"row\">\n                    <div className=\"col-* mb-3\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Name\" name=\"name\" onChange={(e) => setFormData({ ...formData, name: e.target.value })}  />\n                    </div>\n                    <div className=\"col-* mb-3\">\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"email\" onChange={(e) => setFormData({ ...formData, email: e.target.value })}  />\n                    </div>\n                    <div className=\"col-* mb-3\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Phone No.\" name=\"phone\" onChange={(e) => setFormData({ ...formData, phone: e.target.value })}  />\n                    </div>\n                    <div className=\"col-* mb-3\">\n                        <textarea className=\"form-control\" placeholder=\"Message\" name=\"message\" onChange={(e) => setFormData({ ...formData, message: e.target.value })}  ></textarea>\n                    </div>\n\n                    {loading ?\n                        <button className=\"btn btn-primary\" type=\"button\" disabled >\n                            <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />  Submitting...\n                        </button>\n                        :\n                        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                    }\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ContactFormComponent;"]},"metadata":{},"sourceType":"module"}